{ "name": "WixEvents",
  "memberOf": "wix-events-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 8,
      "filename": "index.js" },
  "docs":
    { "summary": "The Wix Events API provides functionality for creating, updating, and managing Wix events.",
      "description":
        [ "The Events API provides functionality for creating, updating and managing Wix events created in ",
          " the Wix Events app and using this Wix Events API. ",
          "",
          " ### About Wix Events",
          "",
          " [Wix events](https://www.wix.com/velo/reference/wix-events-backend/events) are gatherings that ",
          " an individual or a business holds for a group of people. We",
          " refer to these people either as guests, participants, or attendees.",
          "",
          " To enable Wix Event API functionality for your site, add the [Wix Events](https://support.wix.com/en/article/adding-wix-events-to-your-site) application to your site.",
          " You must upgrade your site to a [Premium Plan](https://support.wix.com/en/article/upgrading-your-site-to-premium-3066683) in order to accept online payments for events. ",
          "",
          " The Wix Events API provides functionality allowing you to:",
          " + [Get](wix-events-backend/wixevents/getevents) and [query](wix-events-backend/wixevents/queryevents) Wix event information.",
          " + [Create](wix-events-wixbackend/events/createevent) and [update](wix-events-backend/events/updateevent) a Wix event.",
          " + [Copy](wix-events-backend/wixevents/copyevent) a Wix event.",
          " + [Cancel](wix-events-backend/wixevents/cancelevent) and [delete](wix-events-backend/wixevents/deleteevent) Wix events.",
          "",
          " ### Wix Events vs. Backend Events",
          "",
          " > For clarity, this reference refers to:",
          " > + [\"Backend events\"](https://www.wix.com/velo/reference/wix-events-backend/events) when discussing events that get fired and are handled by event handlers. ",
          " > + [\"Wix events\"](https://www.wix.com/velo/reference/wix-events-backend/wixevents) when discussing actual events that people attend. ",
          "",
          " ### Creating Wix Events",
          "",
          " After [adding the Wix Events application](https://support.wix.com/en/article/adding-wix-events-to-your-site) to your site, you can use the ",
          " [createEvent](wix-events-wixbackend/events/createevent) and the [copyEvent](wix-events-wixbackend/events/copyevent) functions to",
          " start building your catalog of events.",
          "",
          " Wix events are robust with functionality. When creating or updating Wix events using this API, you can configure settings for:  ",
          " + Location",
          " + Scheduling",
          " + Registration (including external registration)",
          " + Ticketing (for ticketed events)",
          " + RSVPs (for RSVP events) ",
          " + Online conferencing ",
          " + Messaging customization",
          " + (Some basic registration form customization is currently supported.)",
          "",
          " #### About Wix Event Types",
          "",
          " When initially creating Wix events, the Wix Events API supports the following types and stores the type both in the `registration.initialType` ",
          " and the `registration.type` properties. The `registration.initialType` property value becomes read-only and never changes.",
          " + RSVP events: `RSVP`",
          " + Ticketed events: `TICKETS`",
          " ",
          " After initial creation and while you continue to define your Wix events, the event types might evolve. `registration.type` reflects the actual, current type of the event. For example:",
          "",
          " + If you want event registration to be managed externally using some other site, its `registration.type` becomes \"`EXTERNAL`\". ",
          " + If guests do not need to register for the event, `registration.type` becomes \"`NO_REGISTRATION`\". ",
          "",
          " ### Registration Considerations",
          "",
          " There are 3 ways to configure registration for a Wix event. The read-only `registration.type`",
          " property indicates how registration is currently configured.",
          "",
          " + **No registration**: `NO_REGISTRATION`",
          "",
          "   No registration is required, all guests can attend.",
          "",
          "   Setting the `registrationDisabled` property to `true` updates `registration.type` to `NO_REGISTRATION`.",
          "",
          " + **Guest registration**: `TICKETS` or `RSVP`",
          "",
          "   Guests must register either by ordering tickets or by RSVPing to the event.",
          "",
          " + **External registration**: `EXTERNAL`",
          "",
          "   The guest list and registration are managed externally. Any existing guest list ",
          "   originally managed by Wix Events exists but is no longer maintained by Wix Events. ",
          "   Update the `externalRegistrationUrl` property to configure external registration ",
          "   and to direct the guest to the given external URL for registration.",
          "",
          " At any point you can pause or close registration with the `registrationDisabled` or ",
          " `registrationPaused` properties.",
          "",
          "",
          " ### Scheduling Considerations",
          "",
          " Most events have known start and end times. ",
          "",
          " However, it is possible you might not know the date and time in advance when initially setting up ",
          " the event. You can create events with times",
          " \"to be determined\" (TBD) later. Whether an event is a TBD event is set using the `tbd` property in the `scheduling` object. ",
          "",
          " Because the Wix event's start and end dates are not yet defined, a message, set in the `scheduling.tbdMessage` property, is displayed.",
          " `scheduling.startDate`, `scheduling.endDate`, and `scheduling.timeZoneId` are optional for TBD events.",
          "",
          " For example, here is an object containing the minimum properties necessary for defining an RSVP-type event that is TBD: ",
          " ```",
          " {",
          "   \"title\": \"My TBD event\",",
          "   \"location\": {",
          "     \"name\": \"Location not set yet, check back later.\"",
          "   },",
          "   \"scheduling\": {",
          "     \"tbd\": true,",
          "     \"tbdMessage\": \"Date not set yet, check back later.\"",
          "   },",
          "   \"registration\": {",
          "     \"initialType\": \"RSVP\"",
          "   }",
          " }",
          "```",
          "",
          " ### Ticketing Considerations",
          "",
          " Once a Wix event is created as a ticketed event, it cannot be reset as an RSVP event. ",
          "",
          " This API lets you set the following for ticket orders: ",
          " ",
          " + The currency for ticket orders.",
          " + How taxes are handled.",
          " + Whether a separate registration form is needed for each ticket, or if one form can be used for all guests on the order.",
          "",
          " You can set whether guests can see other guests attending the event.",
          "",
          "",
          " ### RSVP Considerations ",
          "",
          " Once a Wix event is created as an RSVP event, it cannot be reset as a ticketed event. ",
          "",
          " You can set whether guests can see other guests attending the event.",
          "",
          "",
          " ### Waitlists",
          "",
          " Waitlists are supported only for RSVP events.",
          "",
          " ### Online Conferencing Considerations",
          "",
          " Online conferencing is enabled in the Dashboard. You can see if online conferencing is enabled using the `videoConferencing.enabled` property. ",
          "",
          " This API lets you set the following for online conferencing: ",
          " ",
          " + Whether the event is a webinar or a meeting.",
          " + Provider information.",
          "",
          " You can also see session information, such as links and passwords.",
          "",
          "### Roles and Permissions",
          "",
          " You need some combination of the following roles and permissions to work with Wix events.",
          "",
          "",
          " #### Managing Wix Events",
          "",
          " With \"Manage Events\" permissions you can create and manage all Wix events, including deleting events, selling tickets,",
          " and collecting RSVPs.",
          "",
          " Anyone with the \"Site owner/Admin\" role can use the dashboard to manage Wix events and see the Wix Event guest list. ",
          "",
          " Anyone with the \"Check-in assistant\" role (or Assist Check-ins permissions) can view Wix events in the Dashboard, but cannot update them. They can also see the Wix Event guest list.",
          "",
          " #### Managing Guest Lists ",
          "",
          " Anyone with the \"Site owner/Admin\" role can see and manage a Wix Event's guest list. ",
          "",
          " If a Wix event has a public guest list, attendees can see who else is also attending the event. Attendees do not see the entire guest list--only those that ",
          " indicated that they were attending.",
          "",
          "",
          " #### Registration Forms",
          "",
          " Wix Events lets you manage the data collected from guests during registration using forms. ",
          "",
          " > **Note:** Using this API, you can currently do only some minimal registration form and message customization, but you can see current settings using `Form` properties.",
          " ",
          "  A form is an ordered list of input groups (control blocks), which accept guest information into input fields.",
          "",
          "  Each input group contains one or more nested input fields. For example, a `Name` input group has two input fields: `First Name` and `Last Name`.",
          " ",
          "  By default, name and email controls are always required and are pinned to the top of the form.",
          "",
          "### Using the API ",
          "",
          "To use the Wix Events API, import `events` from the `wix-events-backend` module:",
          "",
          "```javascript",
          "import { wixEvents } from \"wix-events-backend\";",
          "```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "cancelEvent",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.WixEvents.WixEvent" ] },
            "doc": "Fulfilled - The canceled Wix event.\nRejected - Error message." },
        "locations":
          [ { "lineno": 28,
              "filename": "event-management.js" } ],
        "docs":
          { "summary": "Cancels a Wix event and closes its registration.",
            "description":
              [ "The `cancelEvent()` function returns a Promise that resolves to the newly-canceled Wix event after the specified Wix event is successfully canceled. ",
                "",
                " This function does the following: ",
                " + Changes the event status to `CANCELED`. You can also see this status change in the [Events collection](https://support.wix.com/en/article/velo-wix-events-events-collection-fields).",
                " + Sends cancellation emails and/or pushes notifications to registered guests, if Wix event [cancellation notifications are enabled](https://support.wix.com/en/article/wix-events-editing-default-emails).",
                " + Changes the event status to `CLOSED`.",
                "",
                " Canceled Wix events cannot be \"un-canceled.\" You can only delete them. ",
                "",
                " > **Tip**: You can copy a canceled Wix event if you want to reinstate it. Copying an event resets the event's status and registration status.",
                "",
                " Only those with \"Manage Events\" permissions can cancel their own Wix events and others' Wix events." ],
            "links":
              [ "[onEventCanceled( )](wix-events-backend/events/oneventcanceled)" ],
            "examples":
              [ { "title": "Cancel a Wix event",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "const eventId = \"b6de28b7-b235-4887-8526-43164e15a394\";",
                      "",
                      "export function myCancelWixEventFunction() {",
                      "  return wixEvents.cancelEvent(eventId)",
                      "    .then((result) => {",
                      "      return result;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to",
                      " * the canceled Wix event:",
                      " *",
                      " * XXX",
                      " * ",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "copyEvent",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.WixEvents.WixEvent" ] },
            "doc": "Fulfilled - The copied Wix event.\nRejected - Error message." },
        "locations":
          [ { "lineno": 1,
              "filename": "event-management.js" } ],
        "docs":
          { "summary": "Copies a Wix event.",
            "description":
              [ "The `copyEvent()` function returns a Promise that resolves to the newly-copied Wix event after it has successfully been copied.",
                "",
                " This function copies a Wix event, including its registration form, notifications, and ticket settings. The newly-copied event is scheduled two weeks from the date of the original event.",
                "",
                " When copying Wix events: ",
                " + If your site has multilingual enabled, and your event has additional, translated elements (such as registration messages), the translated elements are also copied to the new event. ",
                " + When an event with same title already exists, the title of the newly-copied event has a numeric suffix in parentheses appended to it. For example, copying an event titled \"My Event\" creates \"My Event (1)\".",
                " + Very long event titles are cropped: \"Daily stand-up ev... (2)\".  The maximum number of characters allowed is 120, which includes the suffix identifying the copy of the event.",
                "",
                " The [`onEventCreated( )`](wix-events-backend/events/oneventcreated) event handler runs when a Wix event is copied.",
                " The received `CreatedEvent` object contains information about the new Wix event that was copied.",
                "",
                " Only those with \"Manage Events\" permissions can copy Wix events." ],
            "links":
              [ "[onEventCreated( )](wix-events-backend/events/oneventcreated)" ],
            "examples":
              [ { "title": "Copy a Wix event",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "export function copyEvent() {",
                      "  const eventId = \"86f7abb6-fbce-47b9-b5cd-8a3cc19d14b9\";",
                      "  return wixEvents.copyEvent(eventId)",
                      "  .then((result) => {",
                      "    return result;",
                      "  })",
                      "  .catch((error) => {",
                      "    console.error(error);",
                      "  });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to",
                      " * the copied Wix event.",
                      " * ",
                      " * XXX",
                      " * ",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createEvent",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventInfo",
              "type": "wix-events-backend.WixEvents.WixEventInfo",
              "doc": "Info used to create the Wix event." },
            { "name": "options",
              "type": "wix-events-backend.WixEvents.WixEventInfoOptions",
              "doc": "Options to use when creating the Wix event." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.WixEvents.WixEvent" ] },
            "doc": "Fulfilled - The created Wix event.\nRejected - Error message." },
        "locations":
          [ { "lineno": 53,
              "filename": "event-management.js" } ],
        "docs":
          { "summary": "Creates a Wix event.",
            "description":
              [ "The `createEvent()` function returns a Promise that resolves to the newly-created Wix event after it has successfully been created. ",
                " ",
                " When creating an event, you must define if the event is an RSVP event or a ticketed event. ",
                "",
                " The new Wix event is created with a default [registration form](https://support.wix.com/en/article/wix-events-customizing-your-registration-form-page) in the site's default language and using the site's default regional settings.",
                "",
                " The default registration form includes input fields for first name, last name, and email. Keep in mind that the registration form ",
                " for a ticketed event has different fields than the form for a non-ticketed event.",
                " ",
                " By default, the event is automatically configured to send daily summary reports of new registrations to the site's business email.",
                "",
                " Only those with \"Manage Events\" permissions can create Wix events." ],
            "links":
              [ "[onEventCreated( )](wix-events-backend/events/oneventcreated)" ],
            "examples":
              [ { "title": "Create a Wix event",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "const eventInfo = {",
                      "  title: \"Healthy Living Series: The Child-rearing Years\",",
                      "  location: {",
                      "    name: \"Community Hall\",",
                      "    address: {",
                      "      formatted: \"100 Gansevoort St, New York, NY 10014, USA\",",
                      "      city: \"New York City\",",
                      "      subdivision: \"New York\",",
                      "      country: \"USA\",",
                      "      postalCode: \"10014\",",
                      "      streetAddress: {",
                      "        number: \"100\",",
                      "        name: \"Gansevoort Street\",",
                      "        apt: \"10\"",
                      "      }",
                      "    },",
                      "    type: 'VENUE',",
                      "  },",
                      "  scheduling: {",
                      "    startDate: new Date(\"2021-07-14T13:30:00.000Z\"),",
                      "    endDate: new Date(\"2021-07-14 T13:30:00.000Z\"),",
                      "    timeZoneId: \"America/New_York\"",
                      "  },",
                      "  registration: {",
                      "    initialType: 'RSVP'",
                      "  }",
                      "};",
                      "",
                      "const options = {",
                      "  language: \"en\"",
                      "};",
                      "",
                      "export function createEvent() {",
                      "  return wixEvents.createEvent(eventInfo, options)",
                      "    .then((result) => {",
                      "      return result;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to",
                      " * the created Wix event.",
                      " * ",
                      " * XXX",
                      " * ",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Create a \"TBD\" Wix event",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "const tbdEventInfo = {",
                      "  \"title\": \"Healthy Living Series: The Early Years\",",
                      "  \"location\": {",
                      "      \"name\": \"Unknown\"",
                      "  },",
                      "  \"scheduling\": {",
                      "      \"tbd\": true,",
                      "      \"tbdMessage\": \"Location not set yet. Check back later.\"",
                      "  },",
                      "  \"registration\": {",
                      "      \"initialType\": \"RSVP\"",
                      "  }",
                      "};",
                      "",
                      "export function createEvent() {",
                      "  return wixEvents.createEvent(tbdEventInfo)",
                      "    .then((result) => {",
                      "      console.log(result);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to",
                      " * the created Wix TBD event.",
                      " * ",
                      " * XXX",
                      " * ",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteEvent",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the event is deleted.\nRejected - Error message." },
        "locations":
          [ { "lineno": 80,
              "filename": "event-management.js" } ],
        "docs":
          { "summary": "Deletes a Wix event.",
            "description":
              [ "The `deleteEvent()` function returns a Promise that resolves when the specified Wix event is deleted.",
                "",
                " Only those with \"Manage Events\" permissions can delete Wix events.",
                "",
                " Any event can be deleted regardless of its status or if attendees are registered." ],
            "links":
              [ "[onEventDeleted( )](wix-events-backend/events/oneventdeleted)" ],
            "examples":
              [ { "title": "Delete a Wix event",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "export function deleteEvent() {",
                      "  const eventId = \"342f07c6-2570-4d4b-b454-21b90471084e\";",
                      "",
                      "  return wixEvents.deleteEvent(eventId)",
                      "    .then(() => {",
                      "      console.log(\"Event deleted\");",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "// Returns void" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getEvent",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.WixEvents.WixEvent" ] },
            "doc": "Fulfilled - The Wix event.\nRejected - Error message." },
        "locations":
          [ { "lineno": 99,
              "filename": "event-management.js" } ],
        "docs":
          { "summary": "Retrieves a Wix event by ID.",
            "description":
              [ "The `getEvent()` function returns a Promise that resolves to a Wix event whose ID matches the given ID.",
                " ",
                " Only those with \"Manage Events\" permissions can get Wix events." ],
            "links": [],
            "examples":
              [ { "title": "Get a Wix event",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "const eventId = \"86f7abb6-fbce-47b9-b5cd-8a3cc19d14b9\";",
                      "",
                      "export function myGetEventFunction() {",
                      "  return wixEvents.getEvent(eventId)",
                      "    .then((result) => {",
                      "      return result;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Returns a promise that resolves to",
                      " * the Wix event.",
                      " * ",
                      " * XXX",
                      " * ",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "queryEvents",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-events-backend.WixEvents.EventsQueryBuilder",
            "doc": "Contains functionality for refining a Wix events query.\nThe `EventsQueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the events query functions,\nrefine the query by chaining `EventsQueryBuilder` functions, and then execute the\nquery by chaining the [`find()`](#find) function.\n\nFor example, the following code returns the first 5 upcoming Wix events created by\na given event manager, including scheduled events and events that \nhave started. The events are listed in ascending\norder by the event's start date.\n\n```javascript\nimport { wixEvents } from 'wix-events-backend';\n\nwixEvents.queryEvents()\n  .eq(\"createdBy\", \"4c47c608-cfa8-4037-93ac-738f09560ed3\")\n  .hasSome(\"status\", [\"SCHEDULED\", \"STARTED\"])\n  .ascending(\"scheduling.startDate\")\n  .limit(5)\n  .find()\n  .then( (results) => {\n    console.log(results.items);\n  } );\n```" },
        "locations":
          [ { "lineno": 847,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Creates a query to retrieve a list of Wix events.",
            "description":
              [ "The `queryEvents()` function builds a query to retrieve a list of Wix events and returns ",
                " a [EventsQueryBuilder](wix-events-backend/wixevents/eventsquerybuilder) object.",
                "",
                " The returned object contains the query definition which is typically used to run the query ",
                " using the [`find()`](wix-events-backend/wixevents/eventsquerybuilder/find) function.",
                "",
                " You can refine the query by chaining `EventsQueryBuilder` functions onto the query. `EventsQueryBuilder` ",
                " functions enable you to sort, filter, and control the results that `queryEvents()` returns.",
                "",
                " The `query` runs with the following `EventsQueryBuilder` defaults that you can override:",
                "",
                " + [`eq`](wix-events-backend.WixEvents.eventsquerybuilder.html.#eq): `\"status\": \"SCHEDULED\"`",
                " + [`skip`](wix-events-backend.WixEvents.eventsquerybuilder.html.#skip): `0`",
                " + [`limit`](wix-events-backend.WixEvents.eventsquerybuilder.html.#limit): `50`",
                " + [`descending`](wix-events-backend.WixEvents.eventsquerybuilder.html.#descending): `_createdDate`",
                "",
                " The functions that are chained to `queryEvents()` are applied in the order they are called. For example, ",
                " if you sort on the `_createdDate` property in ascending order and then on the `status` property in ",
                " descending order, the results are sorted first by the created date of the items and then, if there are ",
                " multiple results with the same date, the items are sorted by status in descending order, per created date value.",
                "",
                "",
                "The following `EventsQueryBuilder` functions are supported for `queryEvents()`. ",
                "",
                "For a full description of the Wix Event object, see the object returned for the [`items`](wix-events-backend/wixevents/eventsqueryresult/items) ",
                "property in [`EventsQueryResult`](wix-events-backend/wixevents/eventsqueryresult). ",
                "",
                "| Property                     | Supported Filters & Sorting                                                                |",
                "| ---------------------------- | ------------------------------------------------------------------------------------------ |",
                "|`_id`                         |[`eq()`](wix-events-backend/wixevents/eventsquerybuilder/eq), [`ne()`](wix-events-backend/wixevents/eventsquerybuilder/ne), [`hasSome()`](wix-events-backend/wixevents/eventsquerybuilder/hassome) |",
                "|`title`                       |[`eq()`](wix-events-backend/wixevents/eventsquerybuilder/eq), [`ne()`](wix-events-backend/wixevents/eventsquerybuilder/ne), [`lt()`](wix-events-backend/wixevents/eventsquerybuilder/lt), [`le()`](wix-events-backend/wixevents/eventsquerybuilder/le), [`gt()`](wix-events-backend/wixevents/eventsquerybuilder/gt), [`ge()`](wix-events-backend/wixevents/eventsquerybuilder/ge), [`hasSome()`](wix-events-backend/wixevents/eventsquerybuilder/hassome), [`contains()`](wix-events-backend/wixevents/eventsquerybuilder/contains),[`ascending()`](wix-events-backend/wixevents/eventsquerybuilder/ascending), [`descending()`](wix-events-backend/wixevents/eventsquerybuilder/descending) |",
                "|`status`                      |[`eq()`](wix-events-backend/wixevents/eventsquerybuilder/eq), [`ne()`](wix-events-backend/wixevents/eventsquerybuilder/ne), [`hasSome()`](wix-events-backend/wixevents/eventsquerybuilder/hassome), [`contains()`](wix-events-backend/wixevents/eventsquerybuilder/contains) |",
                "|`createdBy`                   |[`eq()`](wix-events-backend/wixevents/eventsquerybuilder/eq), [`ne()`](wix-events-backend/wixevents/eventsquerybuilder/ne), [`hasSome()`](wix-events-backend/wixevents/eventsquerybuilder/hassome) |",
                "|`scheduling.startDate`        |[`lt()`](wix-events-backend/wixevents/eventsquerybuilder/lt), [`le()`](wix-events-backend/wixevents/eventsquerybuilder/le), [`gt()`](wix-events-backend/wixevents/eventsquerybuilder/gt), [`ge()`](wix-events-backend/wixevents/eventsquerybuilder/ge), [`ascending()`](wix-events-backend/wixevents/eventsquerybuilder/ascending), [`descending()`](wix-events-backend/wixevents/eventsquerybuilder/descending) |",
                "|`scheduling.endDate`          |[`lt()`](wix-events-backend/wixevents/eventsquerybuilder/lt), [`le()`](wix-events-backend/wixevents/eventsquerybuilder/le), [`gt()`](wix-events-backend/wixevents/eventsquerybuilder/gt), [`ge()`](wix-events-backend/wixevents/eventsquerybuilder/ge), [`ascending()`](wix-events-backend/wixevents/eventsquerybuilder/ascending), [`descending()`](wix-events-backend/wixevents/eventsquerybuilder/descending) |",
                "|`_createdDate`                |[`ascending()`](wix-events-backend/wixevents/eventsquerybuilder/ascending), [`descending()`](wix-events-backend/wixevents/eventsquerybuilder/descending) |",
                "|`_updatedDate`                |[`ascending()`](wix-events-backend/wixevents/eventsquerybuilder/ascending), [`descending()`](wix-events-backend/wixevents/eventsquerybuilder/descending) |",
                "|`slug`                        |[`eq()`](wix-events-backend/wixevents/eventsquerybuilder/eq), [`ne()`](wix-events-backend/wixevents/eventsquerybuilder/ne), [`lt()`](wix-events-backend/wixevents/eventsquerybuilder/lt), [`le()`](wix-events-backend/wixevents/eventsquerybuilder/le), [`gt()`](wix-events-backend/wixevents/eventsquerybuilder/gt), [`ge()`](wix-events-backend/wixevents/eventsquerybuilder/ge), [`hasSome()`](wix-events-backend/wixevents/eventsquerybuilder/hassome), [`contains()`](wix-events-backend/wixevents/eventsquerybuilder/contains), [`ascending()`](wix-events-backend/wixevents/eventsquerybuilder/ascending), [`descending()`](wix-events-backend/wixevents/eventsquerybuilder/descending) |",
                "",
                " You can only use one filter function for each property. If a property is used in more than one filter, ",
                " only the first filter will work.",
                "",
                ">**Notes:**",
                "> + By default, `queryEvents()` retrieves only statuses of `\"SCHEDULED\"`. To retrieve all Wix event statuses use a `hasSome()` filter with all of the statuses.",
                "> + A guest can only see their own Wix events if `suppressAuth` is set to `true` in the queryOptions for the [`find()`](wix-events-backend/wixevents/eventsquerybuilder/find) function.",
                "> + When using the `queryEvents()` function immediately following a change to your Wix events, the data retrieved may not contain your most recent changes. See [Wix-data and Eventual Consistency](reference/wix-data/introduction#wix-data_introduction_wix-data-and-eventual-consistency) for more information. To solve this problem, you can use the [`setTimeout()`](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals#setTimeout) function to delay querying for a number of seconds, following any changes to your Wix events data.",
                "",
                "",
                "",
                "Only those with \"Manage Events\" permissions can query Wix events. Only the events they are authorized to ",
                "receive are returned." ],
            "links": [],
            "examples":
              [ { "title": "Retrieve all Wix events",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "  ",
                      "export function myQueryEventFunction() {",
                      "  return wixEvents.queryEvents()",
                      "    .find()",
                      "    .then((results) => {",
                      "      const items = results.items;",
                      "      const firstItem = items[0];  // see item below",
                      "      const pageSize = results.pageSize;",
                      "      const hasNext = results.hasNext();",
                      "      const hasPrev = results.hasPrev();",
                      "      const length = results.length;",
                      "      const query = results.query;",
                      "      return items;",
                      "     })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "  ",
                      "/* firstItem is: ",
                      " *",
                      " * XXX",
                      " *",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateEvent",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventId",
              "type": "string",
              "doc": "Event ID." },
            { "name": "eventInfo",
              "type": "wix-events-backend.WixEvents.WixEventUpdateInfo",
              "doc": "Info used to update the Wix event." },
            { "name": "options",
              "type": "wix-events-backend.WixEvents.WixEventInfoOptions",
              "doc": "Options to use when updating the Wix event." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-events-backend.WixEvents.WixEvent" ] },
            "doc": "Fulfilled - The updated Wix event.\nRejected - Error message." },
        "locations":
          [ { "lineno": 115,
              "filename": "event-management.js" } ],
        "docs":
          { "summary": "Updates a Wix event.",
            "description":
              [ "The `updateEvent()` function returns a Promise that resolves to the newly-updated Wix event after the Wix event is successfully updated.",
                "",
                " Updating a Wix event does not impact existing guests or generated tickets, orders, and invoices. ",
                "",
                " Only those with \"Manage Events\" permissions can update Wix events." ],
            "links":
              [ "[onEventUpdated( )](wix-events-backend/events/oneventupdated)" ],
            "examples":
              [ { "title": "Update a Wix event",
                  "body":
                    [ "import { wixEvents } from \"wix-events-backend\";",
                      "",
                      "/**********************************************",
                      " * Backend code - wix-events-backend.jsw *",
                      " **********************************************/",
                      "",
                      " import { wixEvents } from \"wix-events-backend\";",
                      "",
                      " export function myUpdateWixEventFunction(eventInfo) {",
                      "   return wixEvents.updateEvent(eventInfo);",
                      " }",
                      " ",
                      " /*************",
                      "  * Page code *",
                      "  *************/",
                      " ",
                      " import { myUpdateWixEventFunction } from 'backend/wixEvents';",
                      " ",
                      " // …",
                      " ",
                      " const theDesc = \"A hilarious comedy show by the one and only, Jacky the Lacky!\";",
                      " const eventId = \"1b7c79b6-6823-42cd-a07d-10a21a66e89a\";",
                      " const theStartDate = new Date('2021-10-15T20:30:00.000Z');",
                      " const theEndDate = new Date('2021-10-15T22:30:00.000Z');",
                      " ",
                      " const theAddress = {",
                      "   formatted: \"Herbert House, Harmony Row, Dublin 2, Ireland\"",
                      " }",
                      "",
                      " const theLocation = {",
                      "   name: \"The Best Club in Dublin\",",
                      "   type: \"VENUE\", ",
                      "   address: theAddress",
                      " }",
                      "",
                      " const theSched = {",
                      "   tbd: false,",
                      "   startDate: theStartDate,",
                      "   endDate: theEndDate, ",
                      "   timeZoneId: \"Europe/Dublin\"",
                      " }",
                      "",
                      " const eventInfo = {",
                      "   description: theDesc,",
                      "   location: theLocation,",
                      "   scheduling: theSched",
                      " };",
                      "",
                      " myUpdateWixEventFunction(eventId, eventInfo)",
                      "   .then(wixEvent => {",
                      "     // event updated",
                      "     const id = wixEvent._id;",
                      "     const description = wixEvent.description;",
                      "   })",
                      "   .catch((error) => {",
                      "     // event not updated ",
                      "     const updateError = error;",
                      "   });",
                      " ",
                      " ",
                      "/* Returns a promise that resolves to",
                      " * a Wix event.",
                      " * ",
                      " * XXX",
                      " * ",
                      " */" ],
                  "extra":
                    { "description": "This example demonstrates how to update a TBD event once the venue and date are known. In\n addition to updating the address and date, we set the `scheduling.tbd` field to `false`." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "AdditionalLabel",
        "locations":
          [ { "lineno": 424,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing additional labels for form fields.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Field name." },
            { "name": "label",
              "type": "string",
              "doc": "Field label." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Address",
        "locations":
          [ { "lineno": 1,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a street address for the Wix event.",
            "description":
              [ "The `Address` property contains the full [address](https://www.wix.com/velo/reference/$w/addressinput/value) of the Wix event. ",
                " ",
                " You can specify the `address` for non-TBD events in the following ways: ",
                " + By entering the `address.formatted` property, which the API then uses to populate the other address properties.",
                " + By entering the individual `address` properties including the `address.addressLine1` property and, if needed, the `address.addressLine2`property. (Do not specify `address.streetAddress`.) The API uses this data to populate the `address.formatted` property.",
                " + By entering the individual `address` properties including `address.streetAddress`. (Do not specify `address.addressLine1`.) The API uses this data to populate the `address.formatted` property." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "addressLine1",
              "type": "string",
              "doc": "Main address line (usually street and number) as free text. For non-TBD events, either `addressLine1` or `streetAddress` must be entered. Optional for TBD events.",
              "optional": true },
            { "name": "streetAddress",
              "type": "wix-events-backend.WixEvents.StreetAddress",
              "doc": "Street address object, with number and name in separate fields.  For non-TBD events, either `addressLine1` or `streetAddress` must be entered. Optional for TBD events.",
              "optional": true },
            { "name": "formatted",
              "type": "string",
              "doc": "Human-readable address string. If not provided, the value is generated from the available address data.  If provided, the value is parsed and used to populate other address properties." },
            { "name": "addressLine2",
              "type": "string",
              "doc": "Free text providing more detailed address information, such as apartment, suite, or floor." },
            { "name": "location",
              "type": "wix-events-backend.WixEvents.AddressLocation",
              "doc": "Coordinates of the physical address." },
            { "name": "city",
              "type": "string",
              "doc": "City name." },
            { "name": "subdivision",
              "type": "string",
              "doc": "Code for a subdivision (such as state, prefecture, or province) in an [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format." },
            { "name": "country",
              "type": "string",
              "doc": "2-letter country code in an [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format." },
            { "name": "postalCode",
              "type": "string",
              "doc": "Postal or zip code." } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "street",
                  "members":
                    [ "addressLine1",
                      "streetAddress" ] } ] },
        "labels": [] },
      { "name": "AddressInfo",
        "locations":
          [ { "lineno": 24,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating a street address.",
            "description":
              [ "The `Address` property contains the full [address](https://www.wix.com/velo/reference/$w/addressinput/value) of the Wix event. ",
                " You can specify the `address` for non-TBD events in the following ways: ",
                " + By entering the `address.formatted` property, which the API then uses to populate the other address properties.",
                " + By entering the individual `address` properties including the `address.addressLine1` property and, if needed, the `address.addressLine2`property. (Do not specify `address.streetAddress`.) The API uses this data to populate the `address.formatted` property.",
                " + By entering the individual `address` properties including `address.streetAddress`. (Do not specify `address.addressLine1`.) The API uses this data to populate the `address.formatted` property." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "addressLine1",
              "type": "string",
              "doc": "Main address line (usually street and number) as free text. For non-TBD events, either `addressLine1` or `streetAddress` must be entered. Optional for TBD events.",
              "optional": true },
            { "name": "streetAddress",
              "type": "wix-events-backend.WixEvents.StreetAddressInfo",
              "doc": "Street address object, with number and name in separate fields. For non-TBD events, either `addressLine1` or `streetAddress` must be entered. Optional for TBD events.",
              "optional": true },
            { "name": "formatted",
              "type": "string",
              "doc": "Human-readable address string. If not provided, the value is generated from the available address data. If provided, the value is parsed and used to populate other address properties.",
              "optional": true },
            { "name": "addressLine2",
              "type": "string",
              "doc": "Free text providing more detailed address information, such as apartment, suite, or floor.",
              "optional": true },
            { "name": "location",
              "type": "wix-events-backend.WixEvents.AddressLocationInfo",
              "doc": "Coordinates of the physical address.",
              "optional": true },
            { "name": "city",
              "type": "string",
              "doc": "City name.",
              "optional": true },
            { "name": "subdivision",
              "type": "string",
              "doc": "Code for a subdivision (such as state, prefecture, or province) in an [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format.",
              "optional": true },
            { "name": "country",
              "type": "string",
              "doc": "2-letter country code in an [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.",
              "optional": true },
            { "name": "postalCode",
              "type": "string",
              "doc": "Postal or zip code.",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "street",
                  "members":
                    [ "addressLine1",
                      "streetAddress" ] } ] },
        "labels": [] },
      { "name": "AddressLocation",
        "locations":
          [ { "lineno": 46,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing coordinates of the physical address of the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "latitude",
              "type": "number",
              "doc": "Address's latitude." },
            { "name": "longitude",
              "type": "number",
              "doc": "Address's longitude." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddressLocationInfo",
        "locations":
          [ { "lineno": 54,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating coordinates of the physical address of the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "latitude",
              "type": "number",
              "doc": "Address's latitude.",
              "optional": true },
            { "name": "longitude",
              "type": "number",
              "doc": "Address's longitude.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CalendarLinks",
        "locations":
          [ { "lineno": 86,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing the links (URLs) that guests can click to add the Wix event to their calendars.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "google",
              "type": "string",
              "doc": "A URL that guests can use to add the Wix event to their Google calendars." },
            { "name": "ics",
              "type": "string",
              "doc": "A URL that guests can use to download ICS calendar files in order to add the Wix event to their calendars." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CheckoutFormMessages",
        "locations":
          [ { "lineno": 363,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing messages on the form for purchasing tickets.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Title for the form for purchasing tickets." },
            { "name": "checkoutLabel",
              "type": "string",
              "doc": "Button label text that directs guests to check out the form when purchasing tickets." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeletedWixEvent",
        "locations":
          [ { "lineno": 564,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing the ID of a Wix event that was deleted.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Deleted event ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Form",
        "locations":
          [ { "lineno": 78,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing the corresponding registration form for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "InputGroups",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-events-backend.WixEvents.InputGroup" ] },
              "doc": "A block of fields to group together on the form. For example, you might create a block for first name and last name. These blocks are also called input groups." },
            { "name": "messages",
              "type": "wix-events-backend.WixEvents.FormMessages",
              "doc": "Messages you can customize for the form." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FormMessages",
        "locations":
          [ { "lineno": 371,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a set of configured form messages.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "rsvp",
              "type": "wix-events-backend.WixEvents.RsvpFormMessages",
              "doc": "RSVP form messages." },
            { "name": "checkout",
              "type": "wix-events-backend.WixEvents.CheckoutFormMessages",
              "doc": "Checkout form messages." },
            { "name": "registrationClosed",
              "type": "wix-events-backend.WixEvents.RegistrationClosedMessages",
              "doc": "Messages to display when event registration is closed." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GuestListSettings",
        "locations":
          [ { "lineno": 125,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing the guest list settings for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "public",
              "type": "boolean",
              "doc": "Whether guests can see other guests attending the Wix event. Defaults to `true`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GuestListSettingsInfo",
        "locations":
          [ { "lineno": 132,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating guest list settings for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "public",
              "type": "boolean",
              "doc": "Whether guests can see other guests attending the Wix event. Defaults to `true`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "InputField",
        "locations":
          [ { "lineno": 380,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a field on a form. The field may or may not be included in an `InputGroup` block. Text-type fields can contain one or more values.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Field name." },
            { "name": "label",
              "type": "string",
              "doc": "Main field label." },
            { "name": "additionalLabels",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-events-backend.WixEvents.AdditionalLabel" ] },
              "doc": "Additional labels for multi-valued fields, such as `ADDRESS` fields." },
            { "name": "options",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Pre-defined text choices for fields, such as the options listed in a dropdown." },
            { "name": "required",
              "type": "boolean",
              "doc": "Whether the field is mandatory." },
            { "name": "maxLength",
              "type": "number",
              "doc": "Maximum number of characters allowed for the `TEXT` fields." },
            { "name": "type",
              "type": "string",
              "doc": "Type of the field. The type determines the format of the field.\n This property is used to validate the values entered on the form when submitting. Defaults to `\"TEXT\"`.\nOne of:\n + `\"TEXT\"`\n + `\"NUMBER\"`\n + `\"TEXT_ARRAY\"`\n + `\"DATE_TIME\"`\n + `\"ADDRESS\"`" },
            { "name": "maxSize",
              "type": "number",
              "doc": "The maximum number of values allowed for `TEXT_ARRAY` fields." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "InputGroup",
        "locations":
          [ { "lineno": 401,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a block of fields that tend to be grouped together on a form. The block of fields is also called an input group.",
            "description":
              [ "Use `InputGroup` to aggregate related fields on a form, such as first name and last name.  These blocks are also called input groups." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "type",
              "type": "string",
              "doc": "The type of the block of fields. Every field in the block must be of the same type.  \nOne of:\n + `\"INPUT\"`\n + `\"TEXTAREA\"`\n + `\"DROPDOWN\"`\n + `\"RADIO\"`\n + `\"CHECKBOX\"`\n + `\"NAME\"`\n + `\"GUEST_CONTROL\"`. This control corresponds to the `Additional Guests` option when customizing the registration form in the Dashboard. The fields for this block include specifying how many guests, adding text for a comment, and whether the guest name is required.\n + `\"ADDRESS_SHORT\"`. This control corresponds to the `Single Line` address option when customizing the registration form in the Dashboard, and the `Address.Location.Address.formatted` property in this API. \n + `\"ADDRESS_FULL\"`. This control corresponds to the `Full Address` address option when customizing the registration form in the Dashboard, and the set of individual address properties (excluding `Address.Location.Address.formatted`) in this API. \n + `\"DATE\"`" },
            { "name": "system",
              "type": "boolean",
              "doc": "Whether the fields in the input group are mandatory (such as name and email). When `true`, you can change only the label for the fields in the block." },
            { "name": "inputs",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-events-backend.WixEvents.InputField" ] },
              "doc": "Fields in the block. Also called child input fields." },
            { "name": "orderIndex",
              "type": "number",
              "doc": "Fields in the input group are sorted by this value in ascending order." },
            { "name": "_id",
              "type": "string",
              "doc": "Unique ID for the input group." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Location",
        "locations":
          [ { "lineno": 139,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a Wix event location.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Location name. `name` is required for TBD events (events whose time is yet \"to be determined\")." },
            { "name": "address",
              "type": "wix-events-backend.WixEvents.Address",
              "doc": "Street address for the Wix event.\n  \n The `address` property contains the full [address](https://www.wix.com/velo/reference/$w/addressinput/value) of the Wix event. The address is derived from the [`formatted`](#formatted) property.\n\n The `address` is required for non-TBD events. (TBD events are events whose time is yet \"to be determined.\")" },
            { "name": "type",
              "type": "string",
              "doc": "Location type. Defaults to `\"VENUE\"`.\nOne of:\n + `\"VENUE\"`. The event is being held at a physical location.\n + `\"ONLINE\"`. The event is being held at a virtual online location, such as with online conferencing." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "LocationInfo",
        "locations":
          [ { "lineno": 155,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating a Wix event's location.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Location name. `name` is required for TBD events (events whose time is yet \"to be determined\").",
              "optional": true },
            { "name": "address",
              "type": "wix-events-backend.WixEvents.AddressInfo",
              "doc": "Full [address](https://www.wix.com/velo/reference/$w/addressinput/value).\n The `address` is required for non-TBD events. (TBD events are events whose time is yet \"to be determined.\") \n You can specify the `address` for non-TBD events in the following ways: \n + By entering the `address.formatted` property, which the API then uses to populate the other address properties.\n + By entering the individual `address` properties including the `address.addressLine1` property and, if needed, the `address.addressLine2`property. (Do not specify `address.streetAddress`.) The API uses this data to populate the `address.formatted` property.\n + By entering the individual `address` properties including `address.streetAddress`. (Do not specify `address.addressLine1`.) The API uses this data to populate the `address.formatted` property.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Location type. Defaults to `\"VENUE\"`.\nOne of:\n + `\"VENUE\"`. The event is being held at a physical location.\n + `\"ONLINE\"`. The event is being held at a virtual online location, such as with online conferencing.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Money",
        "locations":
          [ { "lineno": 172,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing money and its default monetary format.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "value",
              "type": "string",
              "doc": "Monetary amount represented as a decimal string with a period as the decimal separator (for example, 3.99)." },
            { "name": "currency",
              "type": "string",
              "doc": "Currency code. Must be a valid [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code (for example, `USD`)." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "OnlineConferencing",
        "locations":
          [ { "lineno": 180,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing online conferencing details for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "enabled",
              "type": "boolean",
              "doc": "Whether online conferencing is enabled. Not supported for Wix events that are TBDs (events whose time is not yet determined).\n When enabled, links to join the conference are generated and provided to guests in an email when the guest registers." },
            { "name": "providerId",
              "type": "string",
              "doc": "ID of the online conferencing provider." },
            { "name": "conferenceType",
              "type": "string",
              "doc": "Online conference type.  Defaults to `\"MEETING\"`.\nOne of:\n + `\"MEETING\"`\n + `\"WEBINAR\"`" },
            { "name": "session",
              "type": "wix-events-backend.WixEvents.Session",
              "doc": "Session details for the Wix event." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "OnlineConferencingInfo",
        "locations":
          [ { "lineno": 194,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating online conferencing settings for a Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "enabled",
              "type": "boolean",
              "doc": "Whether online conferencing is enabled. Not supported for Wix events that are TBDs (events whose time is not yet determined).\n When enabled, links to join the conference are generated and provided to guests in an email when the guest registers.",
              "optional": true },
            { "name": "providerId",
              "type": "string",
              "doc": "ID of the online conferencing provider.",
              "optional": true },
            { "name": "conferenceType",
              "type": "string",
              "doc": "Online conference type. Defaults to `\"MEETING\"`.\nOne of:\n + `\"MEETING\"`\n + `\"WEBINAR\"`",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "QueryOptions",
        "locations":
          [ { "lineno": 832,
              "filename": "event-query.js" } ],
        "docs":
          { "summary": "Options to use when performing a query or query count.",
            "description":
              [ "The `options` parameter is an optional parameter that can be used when",
                " calling the query `find()` function. To use `options`, pass it a `QueryOptions`",
                " object with the following key:value pair:",
                "",
                " + `\"suppressAuth\"`: `true`/`false`" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "suppressAuth",
              "type": "boolean",
              "doc": "Prevents permission checks from running for the [`find()`](wix-events-backend.WixEvents/eventsquerybuilder/find) operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Registration",
        "locations":
          [ { "lineno": 216,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing registration details for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "externalRegistrationUrl",
              "type": "string",
              "doc": "Registration URL if registration for the Wix event managed externally. Guests go to this URL to register." },
            { "name": "restrictedTo",
              "type": "string",
              "doc": "Who can register for the Wix event. Defaults to `\"MEMBER\"`.\nOne of:\n + `\"MEMBER\"`. Only logged-in guests can register. \n + `\"VISITOR_OR_MEMBER\"`. Everyone can register, whether they are logged-in to the site or not." },
            { "name": "initialType",
              "type": "string",
              "doc": "Initial event type, set when creating the Wix event. \nOne of:\n + `\"RSVP\"`. The event is created as an RSVP-type event.\n + `\"TICKETS\"`. The event is created as a ticketed-type event." },
            { "name": "type",
              "type": "string",
              "doc": "Read-only type of the Wix event. After initial event creation, the type can change, for example, if event registration is not necessary (`NO_REGISTRATION`) or if event registration is set to be managed externally (`EXTERNAL`).\n + `\"RSVP\"`. The event was initially created as an RSVP-type event.\n + `\"TICKETS\"`. The event was initially created as a ticketed-type event.\n + `\"EXTERNAL\"`. Registration is managed externally, on a different site. Setting the `externalRegistrationUrl` property updates the `type` to this status.\n + `\"NO_REGISTRATION\"`. There is no need to register for this site.  Setting the `registrationDisabled` property updates the `type` to this status." },
            { "name": "status",
              "type": "string",
              "doc": "Wix event registration status.\nOne of:\n + `\"CLOSED\"`. The event was closed (for example, if the maximum number of attendees was reached) or cancelled. Guests cannot register.\n + `\"CLOSED_MANUALLY\"`. Event registration was closed manually by the event manager. Guests cannot register.\n + `\"OPEN_RSVP\"`. Guests can register for the RSVP-type Wix event. \n + `\"OPEN_RSVP_WAITLIST\"`. Guests can register for the RSVP-type Wix event, but are waitlisted.\n + `\"OPEN_TICKETS\"`. Guests can register for the ticketed-type Wix event.\n + `\"OPEN_EXTERNAL\"`. Guests can register externally for the Wix event--not using Wix Events." },
            { "name": "rsvp",
              "type": "wix-events-backend.WixEvents.Rsvp",
              "doc": "Registration details for an RSVP event." },
            { "name": "ticketing",
              "type": "wix-events-backend.WixEvents.Ticketing",
              "doc": "Registration details for a ticketed event." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegistrationClosedMessages",
        "locations":
          [ { "lineno": 432,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing messages to display when Wix event registration is closed.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "message",
              "type": "string",
              "doc": "Message displayed when event registration is closed." },
            { "name": "exploreEventsLabel",
              "type": "string",
              "doc": "Button label text that directs guests to take other actions, such as a clicking a link to see other Wix events that they can register for." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Rsvp",
        "locations":
          [ { "lineno": 246,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing RSVP registration settings for a Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "rsvpStatusOptions",
              "type": "string",
              "doc": "Whether the Wix event accepts `NO` RSVPs in addition to `YES` RSVPs. Defaults to `\"YES_ONLY\"`.\nOne of:\n + `\"YES_ONLY\"`\n + `\"YES_AND_NO\"`" },
            { "name": "limit",
              "type": "number",
              "doc": "Maximum number of guests allowed to register to the Wix event. If a guest adds additional guests to the same RSVP, the additional guests are also included when calculating the `limit`." },
            { "name": "waitlist",
              "type": "boolean",
              "doc": "Whether to open a waitlist when the guest `limit` for the Wix event is reached. Waitlisted guests are assigned a `WAITING` status." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RsvpFormMessages",
        "locations":
          [ { "lineno": 440,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing RSVP form messages.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "rsvpYes",
              "type": "string",
              "doc": "Button label text displayed next to where the guest RSVPs `YES`." },
            { "name": "rsvpNo",
              "type": "string",
              "doc": "Button label text displayed next to where the guest RSVPs `NO`." },
            { "name": "yesMessages",
              "type": "wix-events-backend.WixEvents.RsvpFormPositive",
              "doc": "Messages to display when the RSVP is `YES`." },
            { "name": "waitingMessages",
              "type": "wix-events-backend.WixEvents.RsvpFormPositive",
              "doc": "Messages to display when the RSVP is `YES`, even if the guest is placed on the waitlist. Wait-listed guests receive the same messages as guests who are not on the waitlist." },
            { "name": "noMessages",
              "type": "wix-events-backend.WixEvents.RsvpFormNegative",
              "doc": "Messages to display when the RSVP is `NO`." },
            { "name": "submitRsvpLabel",
              "type": "string",
              "doc": "Button label text that directs guests to submit the RSVP form." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RsvpFormNegative",
        "locations":
          [ { "lineno": 452,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a messages to display when the RSVP is `NO`.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Form title for negative RSVPs." },
            { "name": "confirmationTitle",
              "type": "string",
              "doc": "Confirmation message title." },
            { "name": "shareLabel",
              "type": "string",
              "doc": "Button label text that suggests guests share the Wix event link with others who might want to attend." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RsvpFormPositive",
        "locations":
          [ { "lineno": 461,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a messages to display when the RSVP is `YES`.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Form title for positive RSVPs." },
            { "name": "confirmationTitle",
              "type": "string",
              "doc": "Confirmation message title." },
            { "name": "confirmationMessage",
              "type": "string",
              "doc": "Confirmation message text." },
            { "name": "addToCalendarLabel",
              "type": "string",
              "doc": "Button label text that suggests guests add the Wix event to their calendar using the link." },
            { "name": "shareLabel",
              "type": "string",
              "doc": "Button label text that suggests guests share the Wix event link with others who might want to attend." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RsvpInfo",
        "locations":
          [ { "lineno": 258,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating RSVP registration settings for a Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "rsvpStatusOptions",
              "type": "string",
              "doc": "Whether the Wix event accepts `NO` rsvps in addition to `YES` rsvps. Defaults to `\"YES_ONLY\"`.\nOne of:\n + `\"YES_ONLY\"`\n + `\"YES_AND_NO\"`",
              "optional": true },
            { "name": "limit",
              "type": "number",
              "doc": "Maximum number of guests allowed to register to the Wix event. If a guest adds additional guests to the same RSVP, the additional guests are also included when calculating the `limit`.",
              "optional": true },
            { "name": "waitlist",
              "type": "boolean",
              "doc": "Whether to open a waitlist when the guest `limit` for the Wix event is reached. Waitlisted guests are assigned a `WAITING` status.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RsvpSummary",
        "locations":
          [ { "lineno": 102,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing RSVP summary data for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "totalRsvps",
              "type": "number",
              "doc": "Total number of RSVPs received." },
            { "name": "yesCount",
              "type": "number",
              "doc": "Number of accepted RSVPs." },
            { "name": "noCount",
              "type": "number",
              "doc": "Number of rejected RSVPs." },
            { "name": "waitlistCount",
              "type": "number",
              "doc": "Number of RSVPs in the waitlist." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Scheduling",
        "locations":
          [ { "lineno": 285,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing scheduling settings for a Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "tbd",
              "type": "boolean",
              "doc": "Whether the event's time is to be determined later. If `true`, the Wix event's schedule is defined as TBD (\"to be determined\").\n Because the Wix event's start and end dates are not yet defined, a message, set in `tbdMessage`, is displayed instead.\n `startDate`, `endDate`, and `timeZoneId` are optional for TBD events." },
            { "name": "tbdMessage",
              "type": "string",
              "doc": "A message to display for events whose `tbd` property is `true`." },
            { "name": "startDate",
              "type": "Date",
              "doc": "Start date and time for the Wix event. Optional for TBD events." },
            { "name": "endDate",
              "type": "Date",
              "doc": "End date and time for the Wix event.  Optional for TBD events." },
            { "name": "timeZoneId",
              "type": "string",
              "doc": "ID of the time zone for the Wix event in [tz database](https://en.wikipedia.org/wiki/Tz_database) format, such as `EST`, or `America/Los_Angeles`. Optional for TBD events." },
            { "name": "showTimeZone",
              "type": "boolean",
              "doc": "Whether the time zone is displayed in the formatted schedule." },
            { "name": "formatted",
              "type": "string",
              "doc": "Formatted schedule representation." },
            { "name": "startDateFormatted",
              "type": "string",
              "doc": "Formatted start date of the event (empty for TBD events)." },
            { "name": "startTimeFormatted",
              "type": "string",
              "doc": "Formatted start time of the event (empty for TBD events)." },
            { "name": "hideEndDate",
              "type": "boolean",
              "doc": "Whether the end date is hidden in the formatted schedule." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SchedulingInfo",
        "locations":
          [ { "lineno": 270,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating scheduling settings for a Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "tbd",
              "type": "boolean",
              "doc": "Whether the event's time is to be determined later. If `true`, the Wix event's schedule is defined as TBD (\"to be determined\").\n Because the Wix event's start and end dates are not yet defined, a message, set in `tbdMessage`, is displayed instead.\n `startDate`, `endDate`, and `timeZoneId` are optional for TBD events.",
              "optional": true },
            { "name": "tbdMessage",
              "type": "string",
              "doc": "A message to display for events whose `tbd` property is `true`.",
              "optional": true },
            { "name": "startDate",
              "type": "Date",
              "doc": "Start date and time for the Wix event. Optional for TBD (\"to be determined\") events.",
              "optional": true },
            { "name": "endDate",
              "type": "Date",
              "doc": "End date and time for the Wix event.  Optional for TBD (\"to be determined\") events.",
              "optional": true },
            { "name": "timeZoneId",
              "type": "string",
              "doc": "ID of the time zone for the Wix event in [tz database format](https://en.wikipedia.org/wiki/Tz_database), such as `EST`, or `America/Los_Angeles`. Optional for TBD events.",
              "optional": true },
            { "name": "showTimeZone",
              "type": "boolean",
              "doc": "Whether the time zone is displayed in the formatted schedule.",
              "optional": true },
            { "name": "hideEndDate",
              "type": "boolean",
              "doc": "Whether the end date is hidden in the formatted schedule.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Session",
        "locations":
          [ { "lineno": 207,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a Wix event session, including links and passwords.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "hostLink",
              "type": "string",
              "doc": "Link for the event host to use to start the online conference session." },
            { "name": "guestLink",
              "type": "string",
              "doc": "Link for the guests to use to join the online conference session." },
            { "name": "password",
              "type": "string",
              "doc": "The password required to join the online conference session (when relevant). Requiring a password is dependent on the online conferencing provider. For example, Zoom provides passwords for its meetings while LiveVideo does not." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SiteUrl",
        "locations":
          [ { "lineno": 303,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing the site URL for the Wix event, including its base URL and path.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "baseUrl",
              "type": "string",
              "doc": "Base URL. \n + Premium sites: The domain,for example, `https://domain.com`.\n + Free sites: The site URL, for example, `https://mysite.wixsite.com/mysite`.\n > **Note**: The above URL examples are for a published site. When previewing your site, you receive the Editor URL." },
            { "name": "path",
              "type": "string",
              "doc": "The path to Wix event page, for example, `/my-events/weekly-meetup-2` for both Premium and free sites." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "StreetAddress",
        "locations":
          [ { "lineno": 62,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing the Wix event's street address, with number and name in separate fields.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "number",
              "type": "string",
              "doc": "Street number." },
            { "name": "name",
              "type": "string",
              "doc": "Street name." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "StreetAddressInfo",
        "locations":
          [ { "lineno": 70,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating the Wix event's street address, with number and name in separate fields.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "number",
              "type": "string",
              "doc": "Street number.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Street name.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Summaries",
        "locations":
          [ { "lineno": 94,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing summary data and statistics for Wix event sales, excluding data pertaining to archived orders.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "rsvp",
              "type": "wix-events-backend.WixEvents.RsvpSummary",
              "doc": "Summary data for RSVP sales." },
            { "name": "ticketing",
              "type": "wix-events-backend.WixEvents.TicketingSummary",
              "doc": "Summary data for revenue and tickets sold." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "TaxSettingInfo",
        "locations":
          [ { "lineno": 327,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating tax settings for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "type",
              "type": "string",
              "doc": "When the tax is applied. Defaults to `\"INCLUDED\"`.\nOne of:\n + `\"INCLUDED\"`. Tax is built-in to the price. \n + `\"ADDED\"`.  Deprecated. This property will continue to work, but it will not receive updates. To keep any existing code compatible with future changes, use `\"ADDED_AT_CHECKOUT\"`.\n + `\"ADDED_AT_CHECKOUT\"`. Tax is added when the guest checks out.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Tax name.",
              "optional": true },
            { "name": "rate",
              "type": "string",
              "doc": "Tax rate, such as `21.55`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "TaxSettings",
        "locations":
          [ { "lineno": 314,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing tax settings for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "type",
              "type": "string",
              "doc": "When the tax is applied. Defaults to `\"INCLUDED\"`.\nOne of:\n + `\"INCLUDED\"`. Tax is built-in to the price. \n + `\"ADDED\"`. Deprecated. This property will continue to work, but it will not receive updates. To keep any existing code compatible with future changes, use `\"ADDED_AT_CHECKOUT\"`.  \n + `\"ADDED_AT_CHECKOUT\"`. Tax is added when the guest checks out." },
            { "name": "name",
              "type": "string",
              "doc": "Tax name." },
            { "name": "rate",
              "type": "string",
              "doc": "Tax rate, such as `21.55`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Ticketing",
        "locations":
          [ { "lineno": 349,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing ticketing settings for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "currency",
              "type": "string",
              "doc": "Currency used for event ordering and transactions." },
            { "name": "formAssignedPerTicket",
              "type": "boolean",
              "doc": "When ordering, whether each ticket in the order needs its own order form or if one form covers multiple tickets." },
            { "name": "tax",
              "type": "wix-events-backend.WixEvents.TaxSettings",
              "doc": "Tax settings." },
            { "name": "lowestTicketPrice",
              "type": "wix-events-backend.WixEvents.Money",
              "doc": "Price of the lowest-priced ticket." },
            { "name": "highestTicketPrice",
              "type": "wix-events-backend.WixEvents.Money",
              "doc": "Price of the lowest-priced ticket." },
            { "name": "lowestTicketPriceFormatted",
              "type": "string",
              "doc": "Formatted price of the lowest-priced ticket." },
            { "name": "highestTicketPriceFormatted",
              "type": "string",
              "doc": "Formatted price of the highest-priced ticket." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "TicketingInfo",
        "locations":
          [ { "lineno": 340,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating ticketing settings for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "formAssignedPerTicket",
              "type": "boolean",
              "doc": "When ordering, whether each ticket in the order needs its own order form or if one form covers multiple tickets.",
              "optional": true },
            { "name": "tax",
              "type": "wix-events-backend.WixEvents.TaxSettingInfo",
              "doc": "Tax settings.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "TicketingSummary",
        "locations":
          [ { "lineno": 112,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a summary of the Wix event's revenue and tickets sold.",
            "description":
              [ "(The summaries do not include data pertaining to archived orders.)" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "totalTickets",
              "type": "number",
              "doc": "Total number of tickets sold." },
            { "name": "revenue",
              "type": "wix-events-backend.WixEvents.Money",
              "doc": "Total revenue, including taxes and excluding fees. Payment provider fees are not deducted." },
            { "name": "currencyLocked",
              "type": "boolean",
              "doc": "Whether currency cannot be changed. The currency is locked after the first order for the event has been created and is set to the currency of that first order." },
            { "name": "totalOrders",
              "type": "number",
              "doc": "Total number of orders placed for the Wix event." },
            { "name": "totalSales",
              "type": "wix-events-backend.WixEvents.Money",
              "doc": "Total sales balance for confirmed transactions." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "WixEvent",
        "locations":
          [ { "lineno": 527,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object representing a Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Wix event ID." },
            { "name": "location",
              "type": "wix-events-backend.WixEvents.Location",
              "doc": "Wix event location details." },
            { "name": "scheduling",
              "type": "wix-events-backend.WixEvents.Scheduling",
              "doc": "Wix event scheduling details." },
            { "name": "title",
              "type": "string",
              "doc": "Wix event title." },
            { "name": "description",
              "type": "string",
              "doc": "Wix event description." },
            { "name": "about",
              "type": "string",
              "doc": "Rich-text (HTML) content for the \"About Event\" section." },
            { "name": "mainImage",
              "type": "string",
              "doc": "The location of an image that represents the Wix event. This image is printed on the ticket (PDF format). The image file must be an image file from the Media Manager. \n\n The URL format is:\n `wix:image://v1/<uri>/<filename>#originWidth=<width>&originHeight=<height>[&watermark=<watermark_manifest_string>]`" },
            { "name": "slug",
              "type": "string",
              "doc": "URL-friendly version of the Wix event title. Unique across all Wix events in the same site." },
            { "name": "language",
              "type": "string",
              "doc": "[ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code of the Wix event. Use to translate content on forms, and so on." },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date the Wix event was created." },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date the Wix event was updated." },
            { "name": "status",
              "type": "string",
              "doc": "Wix event status. Defaults to `\"SCHEDULED\"`.\nOne of:\n + `\"SCHEDULED\"`. The upcoming Wix event is scheduled but has not yet started. \n + `\"STARTED\"`. The Wix event has started and is in progress. \n + `\"ENDED\"`. The Wix event has ended.\n + `\"CANCELED\"`. The Wix event has been canceled." },
            { "name": "registration",
              "type": "wix-events-backend.WixEvents.Registration",
              "doc": "Registration details for the Wix event." },
            { "name": "calendarLinks",
              "type": "wix-events-backend.WixEvents.CalendarLinks",
              "doc": "\"Add to calendar\" URLs." },
            { "name": "eventUrl",
              "type": "wix-events-backend.WixEvents.SiteUrl",
              "doc": "Event page URL components." },
            { "name": "form",
              "type": "wix-events-backend.WixEvents.Form",
              "doc": "Registration form for the site guest to fill out with their contact details, and other information, as relevant." },
            { "name": "summary",
              "type": "wix-events-backend.WixEvents.Summaries",
              "doc": "Summaries of Wix event sales." },
            { "name": "guestList",
              "type": "wix-events-backend.WixEvents.GuestListSettings",
              "doc": "Guest list settings for the Wix event." },
            { "name": "createdBy",
              "type": "string",
              "doc": "ID of the creator of the Wix event." },
            { "name": "videoConferencing",
              "type": "wix-events-backend.WixEvents.OnlineConferencing",
              "doc": "Online conferencing details for the Wix event." },
            { "name": "assignedContactsLabel",
              "type": "string",
              "doc": "The \"Filter by:\" drop-down option for filtering contacts by this event  \n in the Dashboard's [Contact List page](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F8f93447d-7521-4aa1-8c64-4d5a4f025d3f%2Fcontacts%2F%3FreferralInfo%3Dsidebar). \n This property is automatically populated to comprise a \"custom\" prefix, the title of the event, and other suffixes added for uniqueness." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "WixEventInfo",
        "locations":
          [ { "lineno": 571,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for creating a Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Wix event title.",
              "optional": true },
            { "name": "description",
              "type": "string",
              "doc": "Wix event description.",
              "optional": true },
            { "name": "mainImage",
              "type": "string",
              "doc": "The location of an image that represents the Wix event. This image is printed on the ticket (PDF format). The image file must be an image file from the Media Manager. \n\n The URL format is:\n `wix:image://v1/<uri>/<filename>#originWidth=<width>&originHeight=<height>[&watermark=<watermark_manifest_string>]`",
              "optional": true },
            { "name": "registration",
              "type": "wix-events-backend.WixEvents.WixEventRegistrationInfo",
              "doc": "Wix event registration settings.",
              "optional": true },
            { "name": "guestList",
              "type": "wix-events-backend.WixEvents.GuestListSettingsInfo",
              "doc": "Wix event guest list settings.",
              "optional": true },
            { "name": "about",
              "type": "string",
              "doc": "Rich-text (HTML) content for the \"About Event\" section.",
              "optional": true },
            { "name": "videoConferencing",
              "type": "wix-events-backend.WixEvents.OnlineConferencingInfo",
              "doc": "Wix event online conferencing settings.",
              "optional": true },
            { "name": "locationInfo",
              "type": "wix-events-backend.WixEvents.LocationInfo",
              "doc": "Wix event location settings.\n `location.address` is required for non-TBD events.\n `location.name` is required for TBD events.\n (TBD events are events whose times are yet \"to be determined.\")" },
            { "name": "schedulingInfo",
              "type": "wix-events-backend.WixEvents.SchedulingInfo",
              "doc": "Wix event scheduling settings." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "WixEventInfoOptions",
        "locations":
          [ { "lineno": 499,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating registration options for a Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "language",
              "type": "string",
              "doc": "Content language code in [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.\n Used for translating tickets' PDF labels, registration forms, automatic emails, and so on.\n Supported languages: `ar`, `bg`, `cs`, `da`, `de`, `el`, `en`, `es`, `fi`, `fr`, `he`, `hi`, `hu`, `id`, `it`, `ja`, `ko`, `ms`, `nl`, `no`, `pl`, `pt`, `ro`, `ru`, `sv`, `th`, `tl`, `tr`, `uk`, `zh`.\n Defaults to `en`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "WixEventRegistrationInfo",
        "locations":
          [ { "lineno": 472,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating registration settings for the Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "externalRegistrationUrl",
              "type": "string",
              "doc": "Registration URL, if registration for the Wix event is managed externally. Guests go to this URL to register. Setting this property changes the read-only `registration.type` property to `EXTERNAL`.",
              "optional": true },
            { "name": "registrationPaused",
              "type": "boolean",
              "doc": "Whether to temporarily suspend (pause) registration. For example, you might want to pause registration temporarily if you need to change venues to allow for more attendees.",
              "optional": true },
            { "name": "restrictedTo",
              "type": "string",
              "doc": "Who can register to the Wix event. Defaults to `\"MEMBER\"`.\nOne of:\n + `\"MEMBER\"`. Only logged-in guests can register. \n + `\"VISITOR_OR_MEMBER\"`. Everyone can register, whether they are logged-in to the site or not.",
              "optional": true },
            { "name": "registrationDisabled",
              "type": "boolean",
              "doc": "Whether to disable registration. For example, you might want to disable registration if you will not have enough supplies on-hand for more attendees. Setting to `true` changes the read-only `registration.type` property to `NO_REGISTRATION`.",
              "optional": true },
            { "name": "rsvp",
              "type": "wix-events-backend.WixEvents.RsvpInfo",
              "doc": "Registration settings for the RSVP Wix event.",
              "optional": true },
            { "name": "ticketing",
              "type": "wix-events-backend.WixEvents.TicketingInfo",
              "doc": "Registration settings for the ticketed Wix event.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Event type. Only RSVP and TICKETS are allowed when creating an event (`initialType`), however after initial event\ncreation the `type` can be changed to other values.\nOne of:\n + `\"RSVP\"`. The Wix event is an RSVP event. It cannot be changed to a ticketed event.\n + `\"TICKETS\"`. The Wix event is a ticketed event. It cannot be changed to an RSVP event.\n + `\"EXTERNAL\"`. If you created a guest list before setting up external registration, the current guest list remains but is likely to be \n   incomplete. So when sending out messages to the Wix-managed guest list, not all \n   guests will receive them. Messages should be sent from the external registration system\n   to the complete guest list.\n   You can change the value back at any point if you no longer want the event to be managed externally.\n + `\"NO_REGISTRATION\"`. No registration is necessary for the event.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "WixEventUpdateInfo",
        "locations":
          [ { "lineno": 593,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "An object for updating a Wix event.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Wix event title.",
              "optional": true },
            { "name": "description",
              "type": "string",
              "doc": "Wix event description.",
              "optional": true },
            { "name": "location",
              "type": "wix-events-backend.WixEvents.LocationInfo",
              "doc": "Wix event location settings.\n Address is required for non-TBD events.\n Location name is required for TBD events.\n (TBD events are events whose times are yet \"to be determined.\")",
              "optional": true },
            { "name": "scheduling",
              "type": "wix-events-backend.WixEvents.SchedulingInfo",
              "doc": "Wix event scheduling settings.",
              "optional": true },
            { "name": "mainImage",
              "type": "string",
              "doc": "The location of an image that represents the Wix event. This image is printed on the ticket (PDF format). The image file must be an image file from the Media Manager. \n\n The URL format is:\n `wix:image://v1/<uri>/<filename>#originWidth=<width>&originHeight=<height>[&watermark=<watermark_manifest_string>]`",
              "optional": true },
            { "name": "registration",
              "type": "wix-events-backend.WixEvents.WixEventRegistrationInfo",
              "doc": "Wix event registration settings.",
              "optional": true },
            { "name": "guestList",
              "type": "wix-events-backend.WixEvents.GuestListSettingsInfo",
              "doc": "Wix event guest list settings.",
              "optional": true },
            { "name": "about",
              "type": "string",
              "doc": "Rich-text (HTML) content for the \"About Event\" section.",
              "optional": true },
            { "name": "videoConferencing",
              "type": "wix-events-backend.WixEvents.OnlineConferencingInfo",
              "doc": "Wix event online conferencing settings.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }