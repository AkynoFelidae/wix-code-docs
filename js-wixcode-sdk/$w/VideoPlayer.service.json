{ "name": "VideoPlayer",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin" ],
  "labels":
    [ "new" ],
  "location":
    { "filename": "VideoPlayer.es6",
      "lineno": 10 },
  "docs":
    { "summary": "An element presenting videos.",
      "links": [],
      "examples": [] },
  "srcDocs":
    { "summary": "An element presenting videos.",
      "links": [],
      "examples": [] },
  "properties":
    [ { "name": "currentTime",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 80 } ],
        "docs":
          { "summary": "Gets the current play time from the beginning of the current video, in seconds.",
            "description":
              [ "To set the `currentTime` property, use the [`seek()`](#seek) function." ],
            "links": [],
            "examples":
              [ { "title": "Get the current play time",
                  "body":
                    [ "let currentTime = $w(\"#myVideoPlayer\").currentTime // 137" ] } ] },
        "srcDocs":
          { "summary": "Gets the current play time from the beginning of the current video, in seconds.",
            "description":
              [ "To set the `currentTime` property, use the [`seek()`](#seek) function." ],
            "links": [],
            "examples":
              [ { "title": "Get the current play time",
                  "body":
                    [ "let currentTime = $w(\"#myVideoPlayer\").currentTime // 137" ] } ] } },
      { "name": "duration",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 101 } ],
        "docs":
          { "summary": "Gets the total play time of the current video, in seconds.",
            "links": [],
            "examples":
              [ { "title": "Get the current video's duration",
                  "body":
                    [ "let duration = $w(\"#myVideoPlayer\").duration // 198" ] } ] },
        "srcDocs":
          { "summary": "Gets the total play time of the current video, in seconds.",
            "links": [],
            "examples":
              [ { "title": "Get the current video's duration",
                  "body":
                    [ "let duration = $w(\"#myVideoPlayer\").duration // 198" ] } ] } },
      { "name": "isMuted",
        "labels": [],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 171 } ],
        "docs":
          { "summary": "Indicates if the volume is currently muted.",
            "description":
              [ "To set the `isMuted` property, use the [`mute()`](#mute)",
                " and [`unmute()`](#unmute) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get whether the volume is muted",
                  "body":
                    [ "let isMuted = $w(\"#myVideoPlayer\").isMuted // false" ] } ] },
        "srcDocs":
          { "summary": "Indicates if the volume is currently muted.",
            "description":
              [ "To set the `isMuted` property, use the [`mute()`](#mute)",
                " and [`unmute()`](#unmute) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get whether the volume is muted",
                  "body":
                    [ "let isMuted = $w(\"#myVideoPlayer\").isMuted // false" ] } ] } },
      { "name": "isPlaying",
        "labels": [],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 58 } ],
        "docs":
          { "summary": "Indicates if a video is currently playing.",
            "description":
              [ "To set the `isPlaying` property, use the [`play()`](#play),",
                " [`pause()`](#pause), and [`stop()`](#stop) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get whether a video is playing",
                  "body":
                    [ "let isPlaying = $w(\"#myVideoPlayer\").isPlaying // true" ] } ] },
        "srcDocs":
          { "summary": "Indicates if a video is currently playing.",
            "description":
              [ "To set the `isPlaying` property, use the [`play()`](#play),",
                " [`pause()`](#pause), and [`stop()`](#stop) functions." ],
            "links": [],
            "examples":
              [ { "title": "Get whether a video is playing",
                  "body":
                    [ "let isPlaying = $w(\"#myVideoPlayer\").isPlaying // true" ] } ] } },
      { "name": "src",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 193 } ],
        "docs":
          { "summary": "Sets or gets the file location of the current video.",
            "description":
              [ "Setting the `src` property changes the displayed video to",
                " the video found at the new `src` value.",
                "",
                " Getting the `src` property returns the location of the",
                " current video file.",
                "",
                " The video file is a video from the <a href=\"https://support.wix.com/en/article/about-the-media-manager\" target=\"_blank\">Media Manager</a>.",
                "",
                " The URL format is: `wix:video://v1/<video_uri>/<filename>#posterUri=<poster_uri>&posterWidth=<width>&posterHeight=<height>`" ],
            "links": [],
            "examples":
              [ { "title": "Get the current video's location",
                  "body":
                    [ "let videoSrc = $w(\"#myVideoPlayer\").src;",
                      "// \"wix:video://v1/80c05f_be1c421575e34915ad257571c4055ee4/SampleVideo_1280x720_10mb.mp4#posterUri=80c05f_be1c421575e34915ad257571c4055ee4f001.jpg&posterWidth=1280&posterHeight=720\"" ] },
                { "title": "Set the current video's location",
                  "body":
                    [ "$w(\"#myElement\").src = \"wix:video://v1/80c05f_be1c421575e34915ad257571c4055ee4/SampleVideo_1280x720_10mb.mp4#posterUri=80c05f_be1c421575e34915ad257571c4055ee4f001.jpg&posterWidth=1280&posterHeight=720\";" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the file location of the current video.",
            "description":
              [ "Setting the `src` property changes the displayed video to",
                " the video found at the new `src` value.",
                "",
                " Getting the `src` property returns the location of the",
                " current video file.",
                "",
                " The video file is a video from the <a href=\"https://support.wix.com/en/article/about-the-media-manager\" target=\"_blank\">Media Manager</a>.",
                "",
                " The URL format is: `wix:video://v1/<video_uri>/<filename>#posterUri=<poster_uri>&posterWidth=<width>&posterHeight=<height>`" ],
            "links": [],
            "examples":
              [ { "title": "Get the current video's location",
                  "body":
                    [ "let videoSrc = $w(\"#myVideoPlayer\").src;",
                      "// \"wix:video://v1/80c05f_be1c421575e34915ad257571c4055ee4/SampleVideo_1280x720_10mb.mp4#posterUri=80c05f_be1c421575e34915ad257571c4055ee4f001.jpg&posterWidth=1280&posterHeight=720\"" ] },
                { "title": "Set the current video's location",
                  "body":
                    [ "$w(\"#myElement\").src = \"wix:video://v1/80c05f_be1c421575e34915ad257571c4055ee4/SampleVideo_1280x720_10mb.mp4#posterUri=80c05f_be1c421575e34915ad257571c4055ee4f001.jpg&posterWidth=1280&posterHeight=720\";" ] } ] } },
      { "name": "title",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 21 } ],
        "docs":
          { "summary": "Sets or gets the title displayed in a video player.",
            "links": [],
            "examples":
              [ { "title": "Get a video player's title",
                  "body":
                    [ "let title = $w(\"#myVideoPlayer\").title // \"Video Title\"" ] },
                { "title": "Set a video player's title",
                  "body":
                    [ "$w(\"#myVideoPlayer\").title = \"Video Title\";" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the title displayed in a video player.",
            "links": [],
            "examples":
              [ { "title": "Get a video player's title",
                  "body":
                    [ "let title = $w(\"#myVideoPlayer\").title // \"Video Title\"" ] },
                { "title": "Set a video player's title",
                  "body":
                    [ "$w(\"#myVideoPlayer\").title = \"Video Title\";" ] } ] } },
      { "name": "volume",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 120 } ],
        "docs":
          { "summary": "Sets or gets the video player volume.",
            "description":
              [ "Setting the `volume` property sets the video player's percentage of total",
                " volume. Set the value to a number between `0` and `100`.",
                "",
                " Getting the `volume` property returns the video player's current",
                " percentage of total volume." ],
            "links": [],
            "examples":
              [ { "title": "Get a video player's volume",
                  "body":
                    [ "let volume = $w(\"#myVideoPlayer\").volume // 42" ] },
                { "title": "Set a video player's volume",
                  "body":
                    [ "$w(\"#myVideoPlayer\").volume = 42;" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the video player volume.",
            "description":
              [ "Setting the `volume` property sets the video player's percentage of total",
                " volume. Set the value to a number between `0` and `100`.",
                "",
                " Getting the `volume` property returns the video player's current",
                " percentage of total volume." ],
            "links": [],
            "examples":
              [ { "title": "Get a video player's volume",
                  "body":
                    [ "let volume = $w(\"#myVideoPlayer\").volume // 42" ] },
                { "title": "Set a video player's volume",
                  "body":
                    [ "$w(\"#myVideoPlayer\").volume = 42;" ] } ] } } ],
  "operations":
    [ { "name": "mute",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "on fulfilled - When the volume has been muted.",
            "srcDoc": "on fulfilled - When the volume has been muted." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 369 } ],
        "docs":
          { "summary": "Mutes video volume.",
            "links": [],
            "examples":
              [ { "title": "Mute volume",
                  "body":
                    [ "$w(\"#myVideoPlayer\").mute();" ] } ] },
        "srcDocs":
          { "summary": "Mutes video volume.",
            "links": [],
            "examples":
              [ { "title": "Mute volume",
                  "body":
                    [ "$w(\"#myVideoPlayer\").mute();" ] } ] } },
      { "name": "onEnded",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the video has ended.",
              "srcDoc": "The name of the function or\n the function expression to run when the video has ended." } ],
        "ret":
          { "type": "$w.VideoPlayer",
            "doc": "The video player that triggered the event.",
            "srcDoc": "The video player that triggered the event." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 513 } ],
        "docs":
          { "summary": "Adds an event handler that runs when playback has ended.",
            "description":
              [ "A video ends when playback reaches the [`duration`](#duration) of the video." ],
            "links": [],
            "examples":
              [ { "title": "Get the ID of the video player whose video has ended",
                  "body":
                    [ "$w(\"#myVideoPlayer\").onEnded( (event) => {",
                      "  let targetId = event.target.id; // \"myVideoPlayer\"",
                      "});" ] } ] },
        "srcDocs":
          { "summary": "Adds an event handler that runs when playback has ended.",
            "description":
              [ "A video ends when playback reaches the [`duration`](#duration) of the video." ],
            "links": [],
            "examples":
              [ { "title": "Get the ID of the video player whose video has ended",
                  "body":
                    [ "$w(\"#myVideoPlayer\").onEnded( (event) => {",
                      "  let targetId = event.target.id; // \"myVideoPlayer\"",
                      "});" ] } ] } },
      { "name": "onPause",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the video is paused.",
              "srcDoc": "The name of the function or\n the function expression to run when the video is paused." } ],
        "ret":
          { "type": "$w.VideoPlayer",
            "doc": "The video player that triggered the event.",
            "srcDoc": "The video player that triggered the event." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 475 } ],
        "docs":
          { "summary": "Adds an event handler that runs when playback is paused.",
            "description":
              [ "A video can be paused by a user clicking the video player's",
                " pause button or by calling its [`pause()`](#pause) or [`stop()`](#stop) functions." ],
            "links":
              [ "[pause( )](#pause)" ],
            "examples":
              [ { "title": "Get the ID of the video player has been paused",
                  "body":
                    [ "$w(\"#myVideoPlayer\").onPause( (event) => {",
                      "  let targetId = event.target.id; // \"myVideoPlayer\"",
                      "});" ] } ] },
        "srcDocs":
          { "summary": "Adds an event handler that runs when playback is paused.",
            "description":
              [ "A video can be paused by a user clicking the video player's",
                " pause button or by calling its [`pause()`](#pause) or [`stop()`](#stop) functions." ],
            "links":
              [ "[pause( )](#pause)" ],
            "examples":
              [ { "title": "Get the ID of the video player has been paused",
                  "body":
                    [ "$w(\"#myVideoPlayer\").onPause( (event) => {",
                      "  let targetId = event.target.id; // \"myVideoPlayer\"",
                      "});" ] } ] } },
      { "name": "onPlay",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the video is played.",
              "srcDoc": "The name of the function or\n the function expression to run when the video is played." } ],
        "ret":
          { "type": "$w.VideoPlayer",
            "doc": "The video player that triggered the event.",
            "srcDoc": "The video player that triggered the event." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 437 } ],
        "docs":
          { "summary": "Adds an event handler that runs when playback is started or restarted.",
            "description":
              [ "A video can be played by a user clicking the video player's",
                " play button or by calling its [`play()`](#play) function." ],
            "links":
              [ "[play( )](#play)" ],
            "examples":
              [ { "title": "Get the ID of the video player that is playing",
                  "body":
                    [ "$w(\"#myVideoPlayer\").onPlay( (event) => {",
                      "  let targetId = event.target.id; // \"myVideoPlayer\"",
                      "});" ] } ] },
        "srcDocs":
          { "summary": "Adds an event handler that runs when playback is started or restarted.",
            "description":
              [ "A video can be played by a user clicking the video player's",
                " play button or by calling its [`play()`](#play) function." ],
            "links":
              [ "[play( )](#play)" ],
            "examples":
              [ { "title": "Get the ID of the video player that is playing",
                  "body":
                    [ "$w(\"#myVideoPlayer\").onPlay( (event) => {",
                      "  let targetId = event.target.id; // \"myVideoPlayer\"",
                      "});" ] } ] } },
      { "name": "onProgress",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the video progresses.",
              "srcDoc": "The name of the function or\n the function expression to run when the video progresses." } ],
        "ret":
          { "type": "$w.VideoPlayer" },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 549 } ],
        "docs":
          { "summary": "Adds an event handler that runs when playback progresses.",
            "description":
              [ "A video continually progresses as the video plays." ],
            "links": [],
            "examples": [] },
        "srcDocs":
          { "summary": "Adds an event handler that runs when playback progresses.",
            "description":
              [ "A video continually progresses as the video plays." ],
            "links": [],
            "examples": [] } },
      { "name": "pause",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "on fulfilled - When playback has been paused.",
            "srcDoc": "on fulfilled - When playback has been paused." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 293 } ],
        "docs":
          { "summary": "Pauses playback.",
            "description":
              [ "The `pause()` function pauses the current video and fires a `pause` event.",
                "",
                " The `pause` event handlers set on the vido player by the [onPause( )](#onPause)",
                " function or in the Editor are called." ],
            "links": [],
            "examples":
              [ { "title": "Pause playback",
                  "body":
                    [ "$w(\"#myVideoPlayer\").pause();" ] } ] },
        "srcDocs":
          { "summary": "Pauses playback.",
            "description":
              [ "The `pause()` function pauses the current video and fires a `pause` event.",
                "",
                " The `pause` event handlers set on the vido player by the [onPause( )](#onPause)",
                " function or in the Editor are called." ],
            "links": [],
            "examples":
              [ { "title": "Pause playback",
                  "body":
                    [ "$w(\"#myVideoPlayer\").pause();" ] } ] } },
      { "name": "play",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "on fulfilled - When playback begins or resumes.",
            "srcDoc": "on fulfilled - When playback begins or resumes." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 269 } ],
        "docs":
          { "summary": "Begins or resumes playback.",
            "description":
              [ "The `play()` function plays the current video and fires a `play` event.",
                "",
                " The `play` event handlers set on the video player by the [onPlay( )](#onPlay)",
                " function or in the Editor are called." ],
            "links": [],
            "examples":
              [ { "title": "Begin or resume playback",
                  "body":
                    [ "$w(\"#myVideoPlayer\").play();" ] } ] },
        "srcDocs":
          { "summary": "Begins or resumes playback.",
            "description":
              [ "The `play()` function plays the current video and fires a `play` event.",
                "",
                " The `play` event handlers set on the video player by the [onPlay( )](#onPlay)",
                " function or in the Editor are called." ],
            "links": [],
            "examples":
              [ { "title": "Begin or resume playback",
                  "body":
                    [ "$w(\"#myVideoPlayer\").play();" ] } ] } },
      { "name": "seek",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "on fulfilled - When the playback has been moved to the specified time.",
            "srcDoc": "on fulfilled - When the playback has been moved to the specified time." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 407 } ],
        "docs":
          { "summary": "Moves playback to the specified time, in seconds.",
            "links": [],
            "examples":
              [ { "title": "Move playback to 1 minute and 42 seconds into the video",
                  "body":
                    [ "$w(\"#myVideoPlayer\").seek(102);" ] } ] },
        "srcDocs":
          { "summary": "Moves playback to the specified time, in seconds.",
            "links": [],
            "examples":
              [ { "title": "Move playback to 1 minute and 42 seconds into the video",
                  "body":
                    [ "$w(\"#myVideoPlayer\").seek(102);" ] } ] } },
      { "name": "stop",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "on fulfilled - When playback has been stopped.",
            "srcDoc": "on fulfilled - When playback has been stopped." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 317 } ],
        "docs":
          { "summary": "Pauses playback.",
            "description":
              [ "The `stop()` function stops the current video and fires a `pause` event.",
                "",
                " The `pause` event handlers set on the video player by the [onPause( )](#onPause)",
                " function or in the Editor are called." ],
            "links": [],
            "examples":
              [ { "title": "Stop playback",
                  "body":
                    [ "$w(\"#myVideoPlayer\").stop();" ] } ] },
        "srcDocs":
          { "summary": "Pauses playback.",
            "description":
              [ "The `stop()` function stops the current video and fires a `pause` event.",
                "",
                " The `pause` event handlers set on the video player by the [onPause( )](#onPause)",
                " function or in the Editor are called." ],
            "links": [],
            "examples":
              [ { "title": "Stop playback",
                  "body":
                    [ "$w(\"#myVideoPlayer\").stop();" ] } ] } },
      { "name": "togglePlay",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "on fulfilled - When playback has been toggled.",
            "srcDoc": "on fulfilled - When playback has been toggled." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 341 } ],
        "docs":
          { "summary": "Toggles playback.",
            "description":
              [ "The `togglePlay()` function either pauses or plays the current video based",
                " on its current state:",
                " + If the video is paused, it plays and a `play` event is fired. The",
                "   `play` event handlers set on the video player by the [onPlay( )](#onPlay)",
                "   function or in the Editor are called.",
                " + If the video is playing, it is paused and a `pause` event is fired. The",
                "   `pause` event handlers set on the video player by the [onPause( )](#onPause)",
                "   function or in the Editor are called." ],
            "links": [],
            "examples":
              [ { "title": "Toggle playback",
                  "body":
                    [ "$w(\"#myVideoPlayer\").togglePlay();" ] } ] },
        "srcDocs":
          { "summary": "Toggles playback.",
            "description":
              [ "The `togglePlay()` function either pauses or plays the current video based",
                " on its current state:",
                " + If the video is paused, it plays and a `play` event is fired. The",
                "   `play` event handlers set on the video player by the [onPlay( )](#onPlay)",
                "   function or in the Editor are called.",
                " + If the video is playing, it is paused and a `pause` event is fired. The",
                "   `pause` event handlers set on the video player by the [onPause( )](#onPause)",
                "   function or in the Editor are called." ],
            "links": [],
            "examples":
              [ { "title": "Toggle playback",
                  "body":
                    [ "$w(\"#myVideoPlayer\").togglePlay();" ] } ] } },
      { "name": "unmute",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "on fulfilled - When the volume has been unmuted.",
            "srcDoc": "on fulfilled - When the volume has been unmuted." },
        "locations":
          [ { "filename": "VideoPlayer.es6",
              "lineno": 388 } ],
        "docs":
          { "summary": "Unmutes video volume.",
            "links": [],
            "examples":
              [ { "title": "Unmute volume",
                  "body":
                    [ "$w(\"#myVideoPlayer\").unmute();" ] } ] },
        "srcDocs":
          { "summary": "Unmutes video volume.",
            "links": [],
            "examples":
              [ { "title": "Unmute volume",
                  "body":
                    [ "$w(\"#myVideoPlayer\").unmute();" ] } ] } } ],
  "callbacks": [],
  "messages": [] }