{ "name": "Event",
  "memberOf": "$w",
  "mixes": [],
  "labels":
    [ "new",
      "changed" ],
  "location":
    { "filename": "WixEvent.es6",
      "lineno": 12 },
  "docs":
    { "summary": "Events are fired when certain actions occur to elements.",
      "description":
        [ "Events can be caused by user interactions, such as clicking the mouse or",
          " pressing a key, or generated programmatically, such as hiding or showing an",
          " element using the [hide()]($w.HiddenMixin.html#hide) and",
          " [show()]($w.HiddenMixin.html#hide) functions." ],
      "links": [],
      "examples": [] },
  "srcDocs":
    { "summary": "Events are fired when certain actions occur to elements.",
      "description":
        [ "Events can be caused by user interactions, such as clicking the mouse or",
          " pressing a key, or generated programmatically, such as hiding or showing an",
          " element using the [hide()]($w.HiddenMixin.html#hide) and",
          " [show()]($w.HiddenMixin.html#hide) functions." ],
      "links": [],
      "examples": [] },
  "properties":
    [ { "name": "context",
        "labels":
          [ "new" ],
        "get": true,
        "set": false,
        "type": "Object",
        "locations":
          [ { "filename": "WixEvent.es6",
              "lineno": 61 } ],
        "docs":
          { "summary": "Gets the context of the event on a repeated element.",
            "description":
              [ "The context property only appears in events on repeated elements.",
                "",
                " It contains an object with one key:value pair. The key is \"itemId\" and",
                " the value is the ID of the repeated item on which the event occurred." ],
            "links": [],
            "examples":
              [ { "title": "Get the context of the event",
                  "body":
                    [ "$w(\"#myRepeatedElement\").onEvent( (event, $w) => {",
                      "  let itemId = event.context.itemId;  // \"item1\"",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "Gets the context of the event on a repeated element.",
            "description":
              [ "The context property only appears in events on repeated elements.",
                "",
                " It contains an object with one key:value pair. The key is \"itemId\" and",
                " the value is the ID of the repeated item on which the event occurred." ],
            "links": [],
            "examples":
              [ { "title": "Get the context of the event",
                  "body":
                    [ "$w(\"#myRepeatedElement\").onEvent( (event, $w) => {",
                      "  let itemId = event.context.itemId;  // \"item1\"",
                      "} );" ] } ] } },
      { "name": "target",
        "labels":
          [ "new" ],
        "get": true,
        "set": false,
        "type": "$w.Element",
        "locations":
          [ { "filename": "WixEvent.es6",
              "lineno": 34 } ],
        "docs":
          { "summary": "Gets the element that the event was fired on.",
            "links": [],
            "examples":
              [ { "title": "Get the ID of the target element",
                  "body":
                    [ "$w(\"#myElement\").onEvent( (event, $w) => {",
                      "  let targetId = event.target.id;  // \"myElement\"",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "Gets the element that the event was fired on.",
            "links": [],
            "examples":
              [ { "title": "Get the ID of the target element",
                  "body":
                    [ "$w(\"#myElement\").onEvent( (event, $w) => {",
                      "  let targetId = event.target.id;  // \"myElement\"",
                      "} );" ] } ] } },
      { "name": "type",
        "labels":
          [ "new" ],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "WixEvent.es6",
              "lineno": 50 } ],
        "docs":
          { "summary": "Gets the type of event that was fired.",
            "links": [],
            "examples":
              [ { "title": "Get the type of the event",
                  "body":
                    [ "$w(\"#myElement\").onEvent( (event, $w) => {",
                      "  let eventType = event.type; // \"click\"",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "Gets the type of event that was fired.",
            "links": [],
            "examples":
              [ { "title": "Get the type of the event",
                  "body":
                    [ "$w(\"#myElement\").onEvent( (event, $w) => {",
                      "  let eventType = event.type; // \"click\"",
                      "} );" ] } ] } } ],
  "operations": [],
  "callbacks": [],
  "messages": [] }