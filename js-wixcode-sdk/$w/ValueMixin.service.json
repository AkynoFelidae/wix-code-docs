{ "name": "ValueMixin",
  "memberOf": "$w",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "filename": "ValueMixin.es6",
      "lineno": 6 },
  "docs":
    { "description":
        [ "Adds the value property to elements." ],
      "links": [],
      "examples": [] },
  "srcDocs":
    { "description":
        [ "Adds the value property to elements." ],
      "links": [],
      "examples": [] },
  "properties":
    [ { "name": "value",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "ValueMixin.es6",
              "lineno": 51 } ],
        "docs":
          { "summary": "Sets or gets an element's value.",
            "description":
              [ "To reset the form element's value, set the `value` property to `null` or",
                " `undefined`." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's value",
                  "body":
                    [ "let myValue = $w(\"#myElement\").value;" ] },
                { "title": "Set an element's value",
                  "body":
                    [ "$w(\"#myElement\").value = 42;" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets an element's value.",
            "description":
              [ "To reset the form element's value, set the `value` property to `null` or",
                " `undefined`." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's value",
                  "body":
                    [ "let myValue = $w(\"#myElement\").value;" ] },
                { "title": "Set an element's value",
                  "body":
                    [ "$w(\"#myElement\").value = 42;" ] } ] } } ],
  "operations":
    [ { "name": "onChange",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the element's value changes.",
              "srcDoc": "The name of the function or\n the function expression to run when the element's value changes." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element on which the event is now registered.",
            "srcDoc": "The element on which the event is now registered." },
        "locations":
          [ { "filename": "ValueMixin.es6",
              "lineno": 12 } ],
        "docs":
          { "summary": "Adds an event handler that runs when an input element's value\n is changed.",
            "description":
              [ "An element receives a `change` event when a user changes the value",
                " in an input element.",
                "",
                " A `change` event is not triggered when you change an element's value using",
                " the element's [`value`](#value) property." ],
            "links": [],
            "examples":
              [ { "title": "Get the value of the element that was changed",
                  "body":
                    [ "$w(\"#myElement\").onChange( (event, $w) => {",
                      "  let newValue = event.target.value;  // \"new value\"",
                      "});" ] } ] },
        "srcDocs":
          { "summary": "Adds an event handler that runs when an input element's value\n is changed.",
            "description":
              [ "An element receives a `change` event when a user changes the value",
                " in an input element.",
                "",
                " A `change` event is not triggered when you change an element's value using",
                " the element's [`value`](#value) property." ],
            "links": [],
            "examples":
              [ { "title": "Get the value of the element that was changed",
                  "body":
                    [ "$w(\"#myElement\").onChange( (event, $w) => {",
                      "  let newValue = event.target.value;  // \"new value\"",
                      "});" ] } ] } } ],
  "callbacks": [],
  "messages": [] }