{ "name": "wix-stores",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "stores.js" },
  "docs":
    { "summary": "The wix-stores module contains functionality for working with your\n site's store from client-side code.",
      "description":
        [ "To use the Stores API, import `wixStores` from the `wix-stores` module:",
          "",
          "   ```javascript",
          "   import wixStores from 'wix-stores';",
          "   ```",
          "> **Note:**",
          " Additional Stores related APIs can be found in the [`CartIcon`]($w.CartIcon.html),",
          "  [`ProductPage`]($w.ProductPage.html), [`ThankYouPage`]($w.thankyoupage.html), and [`Currencies`](wix-pay-backend.Currencies.html) pages." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "addCustomItemsToCart",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "customItems",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores.customItem" ] },
              "doc": "Custom items to be added to the cart." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores-backend.Cart" ] },
            "doc": "Fulfilled - The updated cart." },
        "locations":
          [ { "lineno": 493,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.cart.addCustomItems()](wix-stores/cart/addCustomItems).",
            "description":
              [ "Adds custom items to the cart.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.cart.addCustomItems()`](wix-stores/cart/addCustomItems).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { cart } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all cart functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.addCustomItemsToCart()`,",
                ">    and replace it with with `cart.addCustomItems()`.",
                ">    Update your code to work with the new `cart.addCustomItems()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getCurrentCart",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores-backend.Cart" ] },
            "doc": "Fulfilled - The retrieved cart." },
        "locations":
          [ { "lineno": 383,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.cart.getCurrentCart()](wix-stores/cart/getCurrentCart).",
            "description":
              [ "Gets the current site visitor's shopping cart.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.cart.getCurrentCart()`](wix-stores/cart/getCurrentCart).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { cart } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all cart functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.getCurrentCart()`,",
                ">    and replace it with with `cart.getCurrentCart()`.",
                ">    Update your code to work with the new `cart.getCurrentCart()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getProductOptionsAvailability",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "productId",
              "type": "string",
              "doc": "The ID of the product whose availability is being checked." },
            { "name": "choices",
              "type": "wix-stores.ProductChoices",
              "doc": "Option choices to use when checking the product's availability." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores.ProductOptionsAvailability" ] },
            "doc": "Fulfilled - The availability information of the product." },
        "locations":
          [ { "lineno": 111,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.product.getOptionsAvailability()](wix-stores/product/getOptionsAvailability).",
            "description":
              [ "Gets the availability of a product based on the specified option choices.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.product.getOptionsAvailability()`](wix-stores/product/getOptionsAvailability).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { product } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all product functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.getProductOptionsAvailability()`,",
                ">    and replace it with with `product.getOptionsAvailability()`.",
                ">    Update your code to work with the new `product.getOptionsAvailability()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getProductVariants",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "productId",
              "type": "string",
              "doc": "ID of the product whose variants are being retrieved. Pass only this field to retrieve all the specified product's variants." },
            { "name": "options",
              "type": "wix-stores.ProductVariantOptions",
              "doc": "Variant options to return. If not specified, all the product's variants are returned." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-stores.VariantItem" ] } ] },
            "doc": "Fulfilled - The variants with the specified choices." },
        "locations":
          [ { "lineno": 250,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.product.getVariants()](wix-stores/product/getVariants).",
            "description":
              [ "Gets the availability of a product based on the specified option choices.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.product.getVariants()`](wix-stores/product/getVariants).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { product } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all product functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.getProductVariants()`,",
                ">    and replace it with with `product.getVariants()`.",
                ">    Update your code to work with the new `product.getVariants()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onCartChanged",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "wix-stores.CartChangedHandler",
              "doc": "The name of the function or the function expression to run when a cart changes." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 304,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.cart.onChange()](wix-stores/cart/onchange).",
            "description":
              [ "The `onCartChanged()` function is a client-side event handler invoked every time the cart changes.",
                "It takes a callback function which receives the new `Cart` object as a parameter.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.cart.onChange()`](wix-stores/cart/onchange).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { cart } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all cart functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.onCartChanged()`,",
                ">    and replace it with with `cart.onChange()`.",
                ">    Update your code to work with the new `cart.onChange()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "removeProductFromCart",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "cartLineItemId",
              "type": "number",
              "doc": "ID of the cart line item to remove." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-stores-backend.Cart" ] },
            "doc": "Fulfilled - The updated cart." },
        "locations":
          [ { "lineno": 434,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "**Deprecated.**\nThis function will continue to work, but a newer version is available at\n[wix-stores.cart.removeProduct()](wix-stores/cart/removeProduct).",
            "description":
              [ "The `removeProductFromCart()` function returns a Promise that resolves to the",
                " updated shopping cart after the product is removed.",
                "",
                "> #### Migration Instructions",
                ">",
                "> If this function is already in your code, it will continue to work.",
                "> To stay compatible with future changes, migrate to",
                "> [`wix-stores.cart.removeProduct()`](wix-stores/cart/removeProduct).",
                ">",
                "> To migrate to the new function:",
                ">",
                "> 1. Add the new import statement:",
                ">",
                ">    ```javascript",
                ">    import { cart } from 'wix-stores'",
                ">    ```",
                ">",
                "> 2. If you plan to migrate all cart functions that use `wix-stores`,",
                ">    remove the original `import wixStores` statement.",
                ">",
                "> 3. Look for any code that uses `wixStores.removeProductFromCart()`,",
                ">    and replace it with with `cart.removeProduct()`.",
                ">    Update your code to work with the new `cart.removeProduct()`",
                ">    call and response properties.",
                ">",
                "> 4. Test your changes to make sure your code behaves as expected." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks":
    [ { "name": "CartChangedHandler",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "cart",
              "type": "wix-stores-backend.Cart",
              "doc": "The changed cart." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 357,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "Function that runs when a cart changes.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "callback",
        "labels":
          [ "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "cart",
              "type": "wix-stores-backend.Cart",
              "doc": "The changed cart." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 221,
              "filename": "stores.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onCartChangedCallback",
        "labels":
          [ "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "cart",
              "type": "wix-stores-backend.Cart",
              "doc": "The changed cart." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 221,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "Function that runs when an item is added or removed from the cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "onCartChangedHandler",
        "labels":
          [ "removed" ],
        "nameParams": [],
        "params":
          [ { "name": "cart",
              "type": "wix-stores-backend.Cart",
              "doc": "The changed cart." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 224,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "Function that runs when a cart changes.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "messages":
    [ { "name": "MediaItem",
        "locations":
          [ { "lineno": 363,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing a media item.",
            "description":
              [ "The `src` property of a `MediaItem` can be an image or video from the [Media Manager](https://support.wix.com/en/article/about-the-media-manager).",
                "",
                " The image source format for Media Manager images is:",
                " `wix:image://v1/<uri>/<filename>#originWidth=<width>&originHeight=<height>[&watermark=<watermark_manifest_string>]`",
                "",
                " The video source format is:",
                " `wix:video://v1/<video_uri>/<filename>#posterUri=<poster_uri>&posterWidth=<width>&posterHeight=<height>`" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "Media item ID." },
            { "name": "title",
              "type": "string",
              "doc": "Media item title." },
            { "name": "description",
              "type": "string",
              "doc": "Media item description." },
            { "name": "type",
              "type": "string",
              "doc": "Media items type. Can be \"image\" or \"video.\"" },
            { "name": "src",
              "type": "string",
              "doc": "Media item URL." },
            { "name": "thumbnail",
              "type": "string",
              "doc": "Thumbnail URL for videos only.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PagingOptions",
        "locations":
          [ { "lineno": 205,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing paging options.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "limit",
              "type": "number",
              "doc": "Maximum number of variants to retrieve. Defaults to 300.",
              "optional": true },
            { "name": "skip",
              "type": "number",
              "doc": "Number of variants to skip before the retrieved variants. Defaults to 0.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductChoices",
        "locations":
          [ { "lineno": 192,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing a product variant's option choices.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionKey",
              "type": "string",
              "doc": "Value of the choice. This key name is\n dependent on the product option. For example, if a product\n has a size option, this key value will be something like \"Size\" and its value\n will be something like \"Large\".\n\n `optionKey` is not case-sensitive. Therefore the values for the option keys \"`Size`\", \"`SIZE`\", and \"`size`\" are combined." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "ProductOption",
        "locations":
          [ { "lineno": 85,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing an option for a store product.",
            "links":
              [ "[getProduct( )](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionType",
              "type": "string",
              "doc": "Option type. Either `\"color\"` or `\"drop_down\"`." },
            { "name": "name",
              "type": "string",
              "doc": "Option name." },
            { "name": "choices",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores.ProductOptionsChoice" ] },
              "doc": "Option choices." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptions",
        "locations":
          [ { "lineno": 73,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing all the available options for a store product, such as \"Size\" or \"Color\".",
            "description":
              [ "An option cannot be changed if it has choices and variants. To change an option, reset its variants with [`resetVariantData()`](wix-stores-backend.html#resetVariantData). For each option, you can define a maximum of six choices." ],
            "links":
              [ "[getProduct()](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "optionKey",
              "type": "wix-stores.ProductOption",
              "doc": "Name of the option. This key name\n is dependent on the options added to the product. For example, if a product has a size\n option, this key will be something like `\"Size\"`.\n\n `optionKey` is not case-sensitive. Therefore the values for the option keys \"`Size`\", \"`SIZE`\", and \"`size`\" are combined." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsAvailability",
        "locations":
          [ { "lineno": 40,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object returned by the `getProductOptionsAvailability()` function representing the availability of a product.",
            "links":
              [ "[getProductOptionsAvailability( )](#getProductOptionsAvailability)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "availableForPurchase",
              "type": "boolean",
              "doc": "Whether the product with the specified option choices is available for purchase." },
            { "name": "productOptions",
              "type": "wix-stores.ProductOptions",
              "doc": "An object representing all the available options for a store product." },
            { "name": "mainMedia",
              "type": "string",
              "doc": "Main product media item (image or video) URL." },
            { "name": "mediaItems",
              "type": "wix-stores.MediaItem",
              "doc": "List of product media items." },
            { "name": "selectedVariant",
              "type": "wix-stores.ProductOptionsAvailabilitySelectedVariant",
              "doc": "The variant of the product selected using the specified option choices if there is one." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsAvailabilitySelectedVariant",
        "locations":
          [ { "lineno": 95,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing the product variant selected using the `getProductOptionsAvailability()` function.",
            "links":
              [ "[getProductOptionsAvailability( )](#getProductOptionsAvailability)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sku",
              "type": "string",
              "doc": "Product variant stock keeping unit value." },
            { "name": "currency",
              "type": "string",
              "doc": "Product variant currency." },
            { "name": "price",
              "type": "number",
              "doc": "Product variant price. The variant price must be greater than its discount." },
            { "name": "discountedPrice",
              "type": "number",
              "doc": "Discounted product variant price." },
            { "name": "formattedPrice",
              "type": "string",
              "doc": "Product variant price formatted with the currency." },
            { "name": "formattedDiscountedPrice",
              "type": "string",
              "doc": "Discounted product variant price formatted with the currency." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the product variant is shown in the store." },
            { "name": "inStock",
              "type": "boolean",
              "doc": "Whether the product variant is in stock." },
            { "name": "weight",
              "type": "number",
              "doc": "Product variant weight." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsChoice",
        "locations":
          [ { "lineno": 53,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing an options choice for a store product, such as choice \"Small\" for the option \"Size.\"",
            "description":
              [ "You can define between one and thirty choices for each option." ],
            "links":
              [ "[getProduct()](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "value",
              "type": "number",
              "doc": "Choice value." },
            { "name": "description",
              "type": "number",
              "doc": "Choice description." },
            { "name": "media",
              "type": "wix-stores.ProductOptionsChoiceMedia",
              "doc": "Choice media." },
            { "name": "inStock",
              "type": "boolean",
              "doc": "Whether the product with this choice is in stock." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the product with this option is visible." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductOptionsChoiceMedia",
        "locations":
          [ { "lineno": 65,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing the choice media.",
            "links":
              [ "[getProduct()](#getProduct)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "mainMedia",
              "type": "string",
              "doc": "Main choice media item (image or video thumbnail) URL." },
            { "name": "mediaItems",
              "type": "wix-stores.MediaItem",
              "doc": "List of choice media items." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ProductVariantOptions",
        "locations":
          [ { "lineno": 182,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing the selection of specific variants of a product. Use only one of\n `choices` or `variantIds`.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "choices",
              "type": "wix-stores.ProductChoices",
              "doc": "The choices the retrieved variants will have.",
              "optional": true },
            { "name": "variantIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "IDs of variants to retrieve.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "VariantInfo",
        "locations":
          [ { "lineno": 233,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object containing variant information to use when creating or updating variants.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "currency",
              "type": "string",
              "doc": "Variant currency." },
            { "name": "price",
              "type": "number",
              "doc": "Variant price. The variant price must be greater than its discount. If the variant price has been updated, changes to the product price do not affect the variant price." },
            { "name": "discountedPrice",
              "type": "number",
              "doc": "Discounted variant price." },
            { "name": "formattedPrice",
              "type": "string",
              "doc": "Variant price formatted with the currency." },
            { "name": "formattedDiscountedPrice",
              "type": "string",
              "doc": "Discounted variant price formatted with the currency." },
            { "name": "weight",
              "type": "number",
              "doc": "Variant weight." },
            { "name": "sku",
              "type": "string",
              "doc": "Variant stock keeping unit value." },
            { "name": "visible",
              "type": "boolean",
              "doc": "Whether the variant is visible in the store." },
            { "name": "pricePerUnit",
              "type": "number",
              "doc": "Price per unit." },
            { "name": "formattedPricePerUnit",
              "type": "string",
              "doc": "Price per unit formatted with currency symbol." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "VariantItem",
        "locations":
          [ { "lineno": 221,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing a product variant item.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Unique variant ID." },
            { "name": "choices",
              "type": "wix-stores.ProductChoices",
              "doc": "The choices of the retrieved variant." },
            { "name": "variant",
              "type": "wix-stores.VariantInfo",
              "doc": "Variant information." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "Variants",
        "locations":
          [ { "lineno": 211,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing product variants.",
            "links":
              [ "[getProductVariants()](#getProductVariants)" ],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "items",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-stores.VariantItem" ] },
              "doc": "List of variant items that match the specified choices or variant IDs." },
            { "name": "length",
              "type": "number",
              "doc": "Number of items in the current results page." },
            { "name": "totalCount",
              "type": "number",
              "doc": "Total number of variants with the specified choices." } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "customItem",
        "locations":
          [ { "lineno": 546,
              "filename": "stores.js" } ],
        "docs":
          { "summary": "An object representing a custom item to be added to the cart.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Custom item name.",
              "optional": true },
            { "name": "price",
              "type": "number",
              "doc": "Custom item price." },
            { "name": "quantity",
              "type": "number",
              "doc": "Custom item quantity." },
            { "name": "note",
              "type": "string",
              "doc": "Note about the custom item.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  },
  "menuSections": "APIs",
  "relatedContent":
    [ { "icon": "video",
        "text": "How to Add Related Products to a Wix Stores Product Page",
        "url": "https://www.youtube.com/watch?v=fFqWO_FaUnw" },
      { "icon": "video",
        "text": "How to Use a Gallery or Repeater to Fully Customize Your Online Store",
        "url": "https://www.youtube.com/watch?v=f2k2sd5y4l0&t=2s" },
      { "icon": "video",
        "text": "How to Create a Gift Quiz for Your Online Store",
        "url": "https://www.youtube.com/watch?v=1JHKZwhMquE&feature=youtu.be" },
      { "icon": "example",
        "text": "Product Configurator",
        "url": "https://www.wix.com/velo/example/Product-Configurator" },
      { "icon": "example",
        "text": "Related Items",
        "url": "https://www.wix.com/velo/example/Related-Items" },
      { "icon": "example",
        "text": "Product Reviews",
        "url": "https://www.wix.com/velo/example/Shop-Reviews" },
      { "icon": "example",
        "text": "Bulk Add to Cart",
        "url": "https://www.wix.com/velo/example/Bulk-Add-to-Cart" },
      { "icon": "example",
        "text": "Print on Demand",
        "url": "https://www.wix.com/velo/example/Bulk-Add-to-Cart" } ] }