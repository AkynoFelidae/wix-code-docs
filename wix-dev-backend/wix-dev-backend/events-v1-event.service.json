{
  "name": "events-v1-event",
  "memberOf": "wix-dev-backend",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "",
    "description": [],
    "links": [],
    "examples": [],
    "request": "NA"
  },
  "properties": [],
  "operations": [],
  "clientEvents":   [
        {
      "name": "onEventEventCanceled",
      "labels": [],
      "nameParams": [],
      "params": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.EventEventCanceled"}],
        "doc": "",
        "in": "NA"
      }],
      "ret":       {
        "type": [{"nativeType": "void"}],
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "This is summary for 'onEventEventCanceled' is auto generated by metro-service ",
        "description": [""],
        "links": [],
        "examples": [        {
          "title": "Title of onEventEventCanceled example",
          "body":           [
            "",
            "  // Auto generated by metro-service.",
            "",
            "  function wixEvents_onEventEventCanceled() {",
            "     // this is how you use it.",
            "  }",
            "",
            "  "
          ],
          "response": []
        }],
        "request": "NA"
      },
      "permissions": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "onEventEventCreated",
      "labels": [],
      "nameParams": [],
      "params": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.EventEventCreated"}],
        "doc": "",
        "in": "NA"
      }],
      "ret":       {
        "type": [{"nativeType": "void"}],
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "This is summary for 'onEventEventCreated' is auto generated by metro-service ",
        "description": [""],
        "links": [],
        "examples": [        {
          "title": "Title of onEventEventCreated example",
          "body":           [
            "",
            "  // Auto generated by metro-service.",
            "",
            "  function wixEvents_onEventEventCreated() {",
            "     // this is how you use it.",
            "  }",
            "",
            "  "
          ],
          "response": []
        }],
        "request": "NA"
      },
      "permissions": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "onEventEventDeleted",
      "labels": [],
      "nameParams": [],
      "params": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.EventEventDeleted"}],
        "doc": "",
        "in": "NA"
      }],
      "ret":       {
        "type": [{"nativeType": "void"}],
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "This is summary for 'onEventEventDeleted' is auto generated by metro-service ",
        "description": [""],
        "links": [],
        "examples": [        {
          "title": "Title of onEventEventDeleted example",
          "body":           [
            "",
            "  // Auto generated by metro-service.",
            "",
            "  function wixEvents_onEventEventDeleted() {",
            "     // this is how you use it.",
            "  }",
            "",
            "  "
          ],
          "response": []
        }],
        "request": "NA"
      },
      "permissions": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "onEventEventEnded",
      "labels": [],
      "nameParams": [],
      "params": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.EventEventEnded"}],
        "doc": "",
        "in": "NA"
      }],
      "ret":       {
        "type": [{"nativeType": "void"}],
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "This is summary for 'onEventEventEnded' is auto generated by metro-service ",
        "description": [""],
        "links": [],
        "examples": [        {
          "title": "Title of onEventEventEnded example",
          "body":           [
            "",
            "  // Auto generated by metro-service.",
            "",
            "  function wixEvents_onEventEventEnded() {",
            "     // this is how you use it.",
            "  }",
            "",
            "  "
          ],
          "response": []
        }],
        "request": "NA"
      },
      "permissions": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "onEventEventReminder",
      "labels": [],
      "nameParams": [],
      "params": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.EventEventReminder"}],
        "doc": "",
        "in": "NA"
      }],
      "ret":       {
        "type": [{"nativeType": "void"}],
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "This is summary for 'onEventEventReminder' is auto generated by metro-service ",
        "description": [""],
        "links": [],
        "examples": [        {
          "title": "Title of onEventEventReminder example",
          "body":           [
            "",
            "  // Auto generated by metro-service.",
            "",
            "  function wixEvents_onEventEventReminder() {",
            "     // this is how you use it.",
            "  }",
            "",
            "  "
          ],
          "response": []
        }],
        "request": "NA"
      },
      "permissions": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "onEventEventStarted",
      "labels": [],
      "nameParams": [],
      "params": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.EventEventStarted"}],
        "doc": "",
        "in": "NA"
      }],
      "ret":       {
        "type": [{"nativeType": "void"}],
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "This is summary for 'onEventEventStarted' is auto generated by metro-service ",
        "description": [""],
        "links": [],
        "examples": [        {
          "title": "Title of onEventEventStarted example",
          "body":           [
            "",
            "  // Auto generated by metro-service.",
            "",
            "  function wixEvents_onEventEventStarted() {",
            "     // this is how you use it.",
            "  }",
            "",
            "  "
          ],
          "response": []
        }],
        "request": "NA"
      },
      "permissions": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "onEventEventUpdated",
      "labels": [],
      "nameParams": [],
      "params": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.EventEventUpdated"}],
        "doc": "",
        "in": "NA"
      }],
      "ret":       {
        "type": [{"nativeType": "void"}],
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "This is summary for 'onEventEventUpdated' is auto generated by metro-service ",
        "description": [""],
        "links": [],
        "examples": [        {
          "title": "Title of onEventEventUpdated example",
          "body":           [
            "",
            "  // Auto generated by metro-service.",
            "",
            "  function wixEvents_onEventEventUpdated() {",
            "     // this is how you use it.",
            "  }",
            "",
            "  "
          ],
          "response": []
        }],
        "request": "NA"
      },
      "permissions": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "Address",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["Physical address"],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "addressLine",
          "type": [{"nativeType": "string"}],
          "doc": "Main address line (usually street and number) as free text",
          "in": "NA"
        },
                {
          "name": "addressLine2",
          "type": [{"nativeType": "string"}],
          "doc": "Free text providing more detailed address info. Usually contains Apt, Suite, Floor",
          "in": "NA"
        },
                {
          "name": "city",
          "type": [{"nativeType": "string"}],
          "doc": "city name",
          "in": "NA"
        },
                {
          "name": "country",
          "type": [{"nativeType": "string"}],
          "doc": "country code",
          "in": "NA"
        },
                {
          "name": "countryFullname",
          "type": [{"nativeType": "string"}],
          "doc": "country full-name",
          "in": "NA"
        },
                {
          "name": "formattedAddress",
          "type": [{"nativeType": "string"}],
          "doc": "A string containing the human-readable address of this location",
          "in": "NA"
        },
                {
          "name": "geocode",
          "type": [{"referenceType": "All APIs.events-v1-event.AddressLocation"}],
          "doc": "coordinates of the physical address",
          "in": "NA"
        },
                {
          "name": "hint",
          "type": [{"nativeType": "string"}],
          "doc": "Free text for human-to-human textual orientation aid purposes",
          "in": "NA"
        },
                {
          "name": "postalCode",
          "type": [{"nativeType": "string"}],
          "doc": "zip/postal code",
          "in": "NA"
        },
                {
          "name": "streetAddress",
          "type": [{"referenceType": "All APIs.events-v1-event.StreetAddress"}],
          "doc": "a break down of the street to number and street name",
          "in": "NA"
        },
                {
          "name": "subdivision",
          "type": [{"nativeType": "string"}],
          "doc": "subdivision (usually state or region) code according to ISO 3166-2",
          "in": "NA"
        },
                {
          "name": "subdivisions",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Subdivision"}]
          }}],
          "doc": "multi-level subdivisions from top to bottom",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "AddressLocation",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "latitude",
          "type": [{"nativeType": "number"}],
          "doc": "",
          "in": "NA"
        },
                {
          "name": "longitude",
          "type": [{"nativeType": "number"}],
          "doc": "",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Agenda",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "enabled",
        "type": [{"nativeType": "boolean"}],
        "doc": "",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "BulkCancelEventsRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "filter",
        "type": [{"complexType":         {
          "referenceType": "All APIs.events-v1-event.Record",
          "typeParams":           [
            {"nativeType": "string"},
            {"nativeType": "any"}
          ]
        }}],
        "doc": "Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "BulkCancelEventsResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "BulkDeleteEventsRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "filter",
        "type": [{"complexType":         {
          "referenceType": "All APIs.events-v1-event.Record",
          "typeParams":           [
            {"nativeType": "string"},
            {"nativeType": "any"}
          ]
        }}],
        "doc": "Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "BulkDeleteEventsResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CalendarLinks",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "google",
          "type": [{"nativeType": "string"}],
          "doc": "\"Add to Google calendar\" URL.",
          "in": "NA"
        },
                {
          "name": "ics",
          "type": [{"nativeType": "string"}],
          "doc": "\"Download ICS calendar file\" URL.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CancelEventRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "_id",
        "type": [{"nativeType": "string"}],
        "doc": "Event ID.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CancelEventResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.Event"}],
        "doc": "Canceled event.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CategoryFilter",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "categorised",
          "type": [{"nativeType": "boolean"}],
          "doc": "If true - only categorised events will be returned.\nIf false - only not categorised events will be returned.",
          "in": "NA"
        },
                {
          "name": "categoryId",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "Category id filter.",
          "in": "NA"
        },
                {
          "name": "states",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.State"}]
          }}],
          "doc": "Category states filter. Default - any state.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CheckoutFormMessages",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "submitActionLabel",
          "type": [{"nativeType": "string"}],
          "doc": "Submit form call-to-action label text.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Main form title for response.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CopyEventRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "draft",
          "type": [{"nativeType": "boolean"}],
          "doc": "If true, event will be copied as draft.\nOtherwise copied event will be published, unless it is draft.",
          "in": "NA"
        },
                {
          "name": "eventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CopyEventRequestV2",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "_id",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "draft",
          "type": [{"nativeType": "boolean"}],
          "doc": "If true, event will be copied as draft.\nOtherwise copied event will be published, unless it is draft.",
          "in": "NA"
        },
                {
          "name": "event",
          "type": [{"referenceType": "All APIs.events-v1-event.EventData"}],
          "doc": "Event data to update (partial)",
          "in": "NA"
        },
                {
          "name": "fields",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "Set of field paths to update.\n<!--ONLY:REST-->\nFields will be auto-populated from the `event` entity unless added to the request explicitly.\n<!--END:ONLY:REST-->\nBehavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CopyEventResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.Event"}],
        "doc": "Copied event.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CopyEventResponseV2",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.Event"}],
        "doc": "Copied event.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CreateEventRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "draft",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether event should be created as draft. Draft events are hidden from site visitors.",
          "in": "NA"
        },
                {
          "name": "event",
          "type": [{"referenceType": "All APIs.events-v1-event.EventData"}],
          "doc": "Event data.",
          "in": "NA"
        },
                {
          "name": "language",
          "type": [{"nativeType": "string"}],
          "doc": "Content language code in ISO 639-1 format.\nUsed for translating ticket PDF labels, registration form, automatic emails, etc.\nSupported languages: ar, bg, cs, da, de, el, en, es, fi, fr, he, hi, hu, id, it, ja, ko, ms, nl, no, pl, pt, ro, ru, sv, th, tl, tr, uk, zh.\nDefaults to en.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "CreateEventResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.Event"}],
        "doc": "Created event.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Cursors",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "next",
          "type": [{"nativeType": "string"}],
          "doc": "Cursor pointing to next result page.",
          "in": "NA"
        },
                {
          "name": "prev",
          "type": [{"nativeType": "string"}],
          "doc": "Cursor pointing to previous result page.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Dashboard",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "rsvpSummary",
          "type": [{"referenceType": "All APIs.events-v1-event.RsvpSummary"}],
          "doc": "Guest RSVP summary.",
          "in": "NA"
        },
                {
          "name": "ticketingSummary",
          "type": [{"referenceType": "All APIs.events-v1-event.TicketingSummary"}],
          "doc": "Summary of revenue and tickets sold.\n(Archived orders are not included).",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "DeleteEventRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "_id",
        "type": [{"nativeType": "string"}],
        "doc": "Event ID.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "DeleteEventResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "_id",
        "type": [{"nativeType": "string"}],
        "doc": "Deleted event ID.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Event",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "_id",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "about",
          "type": [{"nativeType": "string"}],
          "doc": "Rich-text content displayed in Wix UI - \"About Event\" section (HTML).",
          "in": "NA"
        },
                {
          "name": "agenda",
          "type": [{"referenceType": "All APIs.events-v1-event.Agenda"}],
          "doc": "Agenda details.",
          "in": "NA"
        },
                {
          "name": "assignedContactsLabel",
          "type": [{"nativeType": "string"}],
          "doc": "Assigned contacts label key.",
          "in": "NA"
        },
                {
          "name": "calendarLinks",
          "type": [{"referenceType": "All APIs.events-v1-event.CalendarLinks"}],
          "doc": "\"Add to calendar\" URLs.",
          "in": "NA"
        },
                {
          "name": "created",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event creation timestamp.",
          "in": "NA"
        },
                {
          "name": "dashboard",
          "type": [{"referenceType": "All APIs.events-v1-event.Dashboard"}],
          "doc": "Event dashboard summary of RSVP / ticket sales.",
          "in": "NA"
        },
                {
          "name": "description",
          "type": [{"nativeType": "string"}],
          "doc": "Event description.",
          "in": "NA"
        },
                {
          "name": "eventPageUrl",
          "type": [{"referenceType": "All APIs.events-v1-event.SiteUrl"}],
          "doc": "Event page URL components.",
          "in": "NA"
        },
                {
          "name": "feed",
          "type": [{"referenceType": "All APIs.events-v1-event.Feed"}],
          "doc": "Event discussion feed. For internal use.",
          "in": "NA"
        },
                {
          "name": "form",
          "type": [{"referenceType": "All APIs.events-v1-event.Form"}],
          "doc": "Event registration form.",
          "in": "NA"
        },
                {
          "name": "guestListConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.GuestListConfig"}],
          "doc": "Guest list configuration.",
          "in": "NA"
        },
                {
          "name": "instanceId",
          "type": [{"nativeType": "string"}],
          "doc": "Instance ID of the site where event is hosted.",
          "in": "NA"
        },
                {
          "name": "language",
          "type": [{"nativeType": "string"}],
          "doc": "ISO 639-1 language code of the event (used in content translations).",
          "in": "NA"
        },
                {
          "name": "location",
          "type": [{"referenceType": "All APIs.events-v1-event.Location"}],
          "doc": "Event location.",
          "in": "NA"
        },
                {
          "name": "mainImage",
          "type": [{"referenceType": "All APIs.events-v1-event.Image"}],
          "doc": "Main event image.",
          "in": "NA"
        },
                {
          "name": "modified",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event modified timestamp.",
          "in": "NA"
        },
                {
          "name": "onlineConferencing",
          "type": [{"referenceType": "All APIs.events-v1-event.OnlineConferencing"}],
          "doc": "Online conferencing details.",
          "in": "NA"
        },
                {
          "name": "registration",
          "type": [{"referenceType": "All APIs.events-v1-event.Registration"}],
          "doc": "RSVP or ticketing registration details.",
          "in": "NA"
        },
                {
          "name": "scheduling",
          "type": [{"referenceType": "All APIs.events-v1-event.Scheduling"}],
          "doc": "Event scheduling.",
          "in": "NA"
        },
                {
          "name": "seoSettings",
          "type": [{"referenceType": "All APIs.events-v1-event.SeoSettings"}],
          "doc": "SEO settings.",
          "in": "NA"
        },
                {
          "name": "slug",
          "type": [{"nativeType": "string"}],
          "doc": "Event slug URL (generated from event title).",
          "in": "NA"
        },
                {
          "name": "status",
          "type": [{"referenceType": "All APIs.events-v1-event.EventStatus"}],
          "doc": "Event status.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Event title.",
          "in": "NA"
        },
                {
          "name": "userId",
          "type": [{"nativeType": "string"}],
          "doc": "Event creator user ID.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventCanceled",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "eventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "timestamp",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event canceled timestamp in ISO UTC format.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Event title",
          "in": "NA"
        },
                {
          "name": "userId",
          "type": [{"nativeType": "string"}],
          "doc": "Event creator user ID.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventCreated",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "derivedFromEventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID. Indicates the original event which current event was derived from.",
          "in": "NA"
        },
                {
          "name": "derivedFromInstanceId",
          "type": [{"nativeType": "string"}],
          "doc": "Instance ID. Indicates the original app instance which current event was derived from.",
          "in": "NA"
        },
                {
          "name": "eventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "location",
          "type": [{"referenceType": "All APIs.events-v1-event.Location"}],
          "doc": "Event location.",
          "in": "NA"
        },
                {
          "name": "scheduleConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.ScheduleConfig"}],
          "doc": "Event schedule configuration.",
          "in": "NA"
        },
                {
          "name": "status",
          "type": [{"referenceType": "All APIs.events-v1-event.EventStatus"}],
          "doc": "Event status.",
          "in": "NA"
        },
                {
          "name": "timestamp",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event created timestamp in ISO UTC format.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Event title.",
          "in": "NA"
        },
                {
          "name": "userId",
          "type": [{"nativeType": "string"}],
          "doc": "Event creator user ID.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventData",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "about",
          "type": [{"nativeType": "string"}],
          "doc": "Rich-text content for About Event section (HTML).",
          "in": "NA"
        },
                {
          "name": "agenda",
          "type": [{"referenceType": "All APIs.events-v1-event.Agenda"}],
          "doc": "Agenda configuration",
          "in": "NA"
        },
                {
          "name": "description",
          "type": [{"nativeType": "string"}],
          "doc": "Event description.",
          "in": "NA"
        },
                {
          "name": "guestListConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.GuestListConfig"}],
          "doc": "Guest list configuration",
          "in": "NA"
        },
                {
          "name": "location",
          "type": [{"referenceType": "All APIs.events-v1-event.Location"}],
          "doc": "Event location.\nAddress is required for non TBD event.\nLocation name is required for TBD event.",
          "in": "NA"
        },
                {
          "name": "mainImage",
          "type": [{"referenceType": "All APIs.events-v1-event.Image"}],
          "doc": "Main event image. Printed in ticket PDF.\nCurrently, only images previously saved in Wix Media are supported.",
          "in": "NA"
        },
                {
          "name": "onlineConferencingConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.OnlineConferencingConfig"}],
          "doc": "Online conferencing configuration",
          "in": "NA"
        },
                {
          "name": "registrationConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.RegistrationConfig"}],
          "doc": "Registration configuration",
          "in": "NA"
        },
                {
          "name": "rsvpCollectionConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.RsvpCollectionConfig"}],
          "doc": "RSVP collection configuration. Can be used to set limits.",
          "in": "NA"
        },
                {
          "name": "scheduleConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.ScheduleConfig"}],
          "doc": "Event schedule configuration",
          "in": "NA"
        },
                {
          "name": "seoSettings",
          "type": [{"referenceType": "All APIs.events-v1-event.SeoSettings"}],
          "doc": "SEO settings",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Event title.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventDeleted",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "eventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "timestamp",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event deleted timestamp in ISO UTC format.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Event title.",
          "in": "NA"
        },
                {
          "name": "userId",
          "type": [{"nativeType": "string"}],
          "doc": "Event creator user ID.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventEnded",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "eventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "timestamp",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event end timestamp in ISO UTC format.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventPublished",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "derivedFromEventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID. Indicates the original event which current event was derived from.\nCan be used to track the original event and add missing information.",
          "in": "NA"
        },
                {
          "name": "eventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "status",
          "type": [{"referenceType": "All APIs.events-v1-event.EventStatus"}],
          "doc": "Event status.",
          "in": "NA"
        },
                {
          "name": "timestamp",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event publish timestamp in ISO UTC format.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventReminder",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "eventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "location",
          "type": [{"referenceType": "All APIs.events-v1-event.Location"}],
          "doc": "Event location.",
          "in": "NA"
        },
                {
          "name": "scheduleConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.ScheduleConfig"}],
          "doc": "Event schedule configuration.",
          "in": "NA"
        },
                {
          "name": "startsIn",
          "type": [{"referenceType": "All APIs.events-v1-event.TimeDuration"}],
          "doc": "Time until the event starts (currently, reminder is triggered 1 day before event starts).",
          "in": "NA"
        },
                {
          "name": "timestamp",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Reminder timestamp in ISO UTC format.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Event title.",
          "in": "NA"
        },
                {
          "name": "userId",
          "type": [{"nativeType": "string"}],
          "doc": "Event creator user ID.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventStarted",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "eventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "timestamp",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event start timestamp in ISO UTC format.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventUpdated",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "eventId",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "fields",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "The set of properties which were updated. For example 'title' or 'location'",
          "in": "NA"
        },
                {
          "name": "location",
          "type": [{"referenceType": "All APIs.events-v1-event.Location"}],
          "doc": "Event location.",
          "in": "NA"
        },
                {
          "name": "scheduleConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.ScheduleConfig"}],
          "doc": "Event schedule configuration.",
          "in": "NA"
        },
                {
          "name": "scheduleConfigUpdated",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether schedule configuration was updated.",
          "in": "NA"
        },
                {
          "name": "timestamp",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event update timestamp in ISO UTC format.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Event title.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "ExternalEvent",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "registration",
        "type": [{"nativeType": "string"}],
        "doc": "External event registration URL.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "FacetCounts",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "counts",
        "type": [{"complexType":         {
          "referenceType": "All APIs.events-v1-event.Record",
          "typeParams":           [
            {"nativeType": "string"},
            {"nativeType": "number"}
          ]
        }}],
        "doc": "Facet counts aggregated per value",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Feed",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "token",
        "type": [{"nativeType": "string"}],
        "doc": "Event discussion feed token.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "FindEventRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "_id",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "fieldset",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.EventFieldset"}]
          }}],
          "doc": "Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\nSome fields require additional computation that affects latency.\nUse minimum set of required fieldset for best performance.",
          "in": "NA"
        },
                {
          "name": "slug",
          "type": [{"nativeType": "string"}],
          "doc": "URL slug.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "FindEventResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.Event"}],
        "doc": "Event.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Form",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["The form defines which elements are rendered in the Wix UI during the registration process (RSVP or checkout).\nIt also contains customizable messages and labels."],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "controls",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.InputControl"}]
          }}],
          "doc": "Nested fields as an ordered list.",
          "in": "NA"
        },
                {
          "name": "messages",
          "type": [{"referenceType": "All APIs.events-v1-event.FormMessages"}],
          "doc": "Set of configured form messages.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "FormMessages",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["Defines form messages shown in UI before, during, and after registration flow.\nIt enables configuration of form titles, response labels, \"thank you\" messages, and call-to-action texts."],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "checkout",
          "type": [{"referenceType": "All APIs.events-v1-event.CheckoutFormMessages"}],
          "doc": "Checkout form messages.",
          "in": "NA"
        },
                {
          "name": "registrationClosed",
          "type": [{"referenceType": "All APIs.events-v1-event.RegistrationClosedMessages"}],
          "doc": "Messages shown when event registration is closed.",
          "in": "NA"
        },
                {
          "name": "rsvp",
          "type": [{"referenceType": "All APIs.events-v1-event.RsvpFormMessages"}],
          "doc": "RSVP form messages.",
          "in": "NA"
        },
                {
          "name": "ticketsUnavailable",
          "type": [{"referenceType": "All APIs.events-v1-event.TicketsUnavailableMessages"}],
          "doc": "Messages shown when event tickets are unavailable.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "GetEventRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "_id",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "fieldset",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.EventFieldset"}]
          }}],
          "doc": "Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\nSome fields require additional computation that affects latency.\nUse minimum set of required fieldset for best performance.",
          "in": "NA"
        },
                {
          "name": "resolveFullAddress",
          "type": [{"nativeType": "boolean"}],
          "doc": "indicates whether full_address should be resolved",
          "in": "NA"
        },
                {
          "name": "slug",
          "type": [{"nativeType": "string"}],
          "doc": "URL slug.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "GetEventResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.Event"}],
        "doc": "Event.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "GuestListConfig",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "publicGuestList",
        "type": [{"nativeType": "boolean"}],
        "doc": "Whether members can see other members attending the event (defaults to true).",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Image",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "_id",
          "type": [{"nativeType": "string"}],
          "doc": "WixMedia image ID.",
          "in": "NA"
        },
                {
          "name": "altText",
          "type": [{"nativeType": "string"}],
          "doc": "Image alt text. Optional.",
          "in": "NA"
        },
                {
          "name": "height",
          "type": [{"nativeType": "number"}],
          "doc": "Original image height.",
          "in": "NA"
        },
                {
          "name": "url",
          "type": [{"nativeType": "string"}],
          "doc": "Image URL.",
          "in": "NA"
        },
                {
          "name": "urlExpirationDate",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Image URL expiration date (when relevant). Optional",
          "in": "NA"
        },
                {
          "name": "width",
          "type": [{"nativeType": "number"}],
          "doc": "Original image width.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Input",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["An input of one or multiple text values"],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "additionalLabels",
          "type": [{"complexType":           {
            "referenceType": "All APIs.events-v1-event.Record",
            "typeParams":             [
              {"nativeType": "string"},
              {"nativeType": "string"}
            ]
          }}],
          "doc": "Additional labels for multi-valued fields such as address.",
          "in": "NA"
        },
                {
          "name": "array",
          "type": [{"nativeType": "boolean"}],
          "doc": "Deprecated: use `ValueType.TEXT_ARRAY`.",
          "in": "NA"
        },
                {
          "name": "defaultOptionSelection",
          "type": [{"referenceType": "All APIs.events-v1-event.OptionSelection"}],
          "doc": "Preselected option.\nCurrently only applicable for dropdown.",
          "in": "NA"
        },
                {
          "name": "label",
          "type": [{"nativeType": "string"}],
          "doc": "Main field label",
          "in": "NA"
        },
                {
          "name": "labels",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Label"}]
          }}],
          "doc": "Additional labels for multi-valued fields such as address.",
          "in": "NA"
        },
                {
          "name": "mandatory",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether field is mandatory.",
          "in": "NA"
        },
                {
          "name": "maxLength",
          "type": [{"nativeType": "number"}],
          "doc": "Maximum number of accepted characters (relevant for text fields).",
          "in": "NA"
        },
                {
          "name": "maxSize",
          "type": [{"nativeType": "number"}],
          "doc": "A maximum accepted values for array input.\nOnly applicable for inputs of valueType: TEXT_ARRAY.",
          "in": "NA"
        },
                {
          "name": "name",
          "type": [{"nativeType": "string"}],
          "doc": "Field name.",
          "in": "NA"
        },
                {
          "name": "options",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "Predefined choice options for fields, such as dropdown.",
          "in": "NA"
        },
                {
          "name": "type",
          "type": [{"referenceType": "All APIs.events-v1-event.ValueType"}],
          "doc": "Type which determines field format.\nUsed to validate submitted response.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "InputControl",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["A block of nested fields.\nUsed to aggregate similar inputs like First Name and Last Name."],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "_id",
          "type": [{"nativeType": "string"}],
          "doc": "Unique control ID.",
          "in": "NA"
        },
                {
          "name": "inputs",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Input"}]
          }}],
          "doc": "Child inputs.",
          "in": "NA"
        },
                {
          "name": "label",
          "type": [{"nativeType": "string"}],
          "doc": "Deprecated: use `inputs.label`.",
          "in": "NA"
        },
                {
          "name": "name",
          "type": [{"nativeType": "string"}],
          "doc": "Deprecated: Use `id`.",
          "in": "NA"
        },
                {
          "name": "orderIndex",
          "type": [{"nativeType": "number"}],
          "doc": "Field controls are sorted by this value in ascending order.",
          "in": "NA"
        },
                {
          "name": "system",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether control is mandatory (such as name & email). When true, only label can be changed.",
          "in": "NA"
        },
                {
          "name": "type",
          "type": [{"referenceType": "All APIs.events-v1-event.InputControlType"}],
          "doc": "Field control type.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Label",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "label",
          "type": [{"nativeType": "string"}],
          "doc": "Field label.",
          "in": "NA"
        },
                {
          "name": "name",
          "type": [{"nativeType": "string"}],
          "doc": "Field name.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "ListEventsRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "categoryFilter",
          "type": [{"referenceType": "All APIs.events-v1-event.CategoryFilter"}],
          "doc": "Category filter.",
          "in": "NA"
        },
                {
          "name": "facet",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "Filter facets to include in the response.\nSee [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        },
                {
          "name": "fieldset",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.EventFieldset"}]
          }}],
          "doc": "Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\nSome fields require additional computation that affects latency of the service.\nUse minimum set of required fieldset for best performance.",
          "in": "NA"
        },
                {
          "name": "includeDrafts",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether draft events should be returned in the response.\nRequires WIX_EVENTS.MANAGE_EVENTS permission.",
          "in": "NA"
        },
                {
          "name": "limit",
          "type": [{"nativeType": "number"}],
          "doc": "Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).",
          "in": "NA"
        },
                {
          "name": "offset",
          "type": [{"nativeType": "number"}],
          "doc": "Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).",
          "in": "NA"
        },
                {
          "name": "recurrenceStatus",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Status"}]
          }}],
          "doc": "Recurrence status filter.",
          "in": "NA"
        },
                {
          "name": "slug",
          "type": [{"nativeType": "string"}],
          "doc": "Event URL slug.",
          "in": "NA"
        },
                {
          "name": "sort",
          "type": [{"nativeType": "string"}],
          "doc": "Sort order, defaults to `\"created:asc\"`.\nSee [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        },
                {
          "name": "status",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.EventStatus"}]
          }}],
          "doc": "Event status.",
          "in": "NA"
        },
                {
          "name": "userFilter",
          "type": [{"referenceType": "All APIs.events-v1-event.UserFilter"}],
          "doc": "Wix user filter, by default any.\nAllows to filter events by user relation to the event.",
          "in": "NA"
        },
                {
          "name": "userId",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "User ID filter, by default any",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "ListEventsResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "events",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Event"}]
          }}],
          "doc": "Events list.",
          "in": "NA"
        },
                {
          "name": "facets",
          "type": [{"complexType":           {
            "referenceType": "All APIs.events-v1-event.Record",
            "typeParams":             [
              {"nativeType": "string"},
              {"referenceType": "All APIs.events-v1-event.FacetCounts"}
            ]
          }}],
          "doc": "Filter facets.",
          "in": "NA"
        },
                {
          "name": "limit",
          "type": [{"nativeType": "number"}],
          "doc": "Limit.",
          "in": "NA"
        },
                {
          "name": "offset",
          "type": [{"nativeType": "number"}],
          "doc": "Offset.",
          "in": "NA"
        },
                {
          "name": "total",
          "type": [{"nativeType": "number"}],
          "doc": "Total number of events that match the given filters.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "ListUserEventsRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "facet",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "Filter facets to include in the response.\nSee [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        },
                {
          "name": "paging",
          "type": [{"referenceType": "All APIs.events-v1-event.Paging"}],
          "doc": "",
          "in": "NA"
        },
                {
          "name": "sort",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Sorting"}]
          }}],
          "doc": "Sort order, defaults to `\"created:asc\"`.\nSee [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        },
                {
          "name": "status",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.EventStatus"}]
          }}],
          "doc": "Event status.",
          "in": "NA"
        },
                {
          "name": "userFilter",
          "type": [{"referenceType": "All APIs.events-v1-event.UserFilter"}],
          "doc": "Wix user filter, by default any.\nAllows to filter events by user relation to the event.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "ListUserEventsResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "events",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Event"}]
          }}],
          "doc": "Events list.",
          "in": "NA"
        },
                {
          "name": "facets",
          "type": [{"complexType":           {
            "referenceType": "All APIs.events-v1-event.Record",
            "typeParams":             [
              {"nativeType": "string"},
              {"referenceType": "All APIs.events-v1-event.FacetCounts"}
            ]
          }}],
          "doc": "Filter facets.",
          "in": "NA"
        },
                {
          "name": "pagingMetadata",
          "type": [{"referenceType": "All APIs.events-v1-event.PagingMetadataV2"}],
          "doc": "",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Location",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "address",
          "type": [{"nativeType": "string"}],
          "doc": "Single line address representation.",
          "in": "NA"
        },
                {
          "name": "coordinates",
          "type": [{"referenceType": "All APIs.events-v1-event.MapCoordinates"}],
          "doc": "Location map coordinates.",
          "in": "NA"
        },
                {
          "name": "fullAddress",
          "type": [{"referenceType": "All APIs.events-v1-event.Address"}],
          "doc": "Full address derived from formatted single line `address`.\nWhen `full_address` is used to create or update the event, deprecated `address` and `coordinates` are ignored.\nIf provided `full_address` has empty `formatted_address` or `coordinates`, it will be auto-completed using Atlas service.",
          "in": "NA"
        },
                {
          "name": "name",
          "type": [{"nativeType": "string"}],
          "doc": "Location name.",
          "in": "NA"
        },
                {
          "name": "tbd",
          "type": [{"nativeType": "boolean"}],
          "doc": "Defines event location as TBD (To Be Determined).\nWhen event location is not yet defined, `name` is displayed instead of location address.\n`coordinates`, `address`, `type` and `full_address` are not required when location is TBD.",
          "in": "NA"
        },
                {
          "name": "type",
          "type": [{"referenceType": "All APIs.events-v1-event.LocationType"}],
          "doc": "Location type.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "MapCoordinates",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "lat",
          "type": [{"nativeType": "number"}],
          "doc": "Latitude.",
          "in": "NA"
        },
                {
          "name": "lng",
          "type": [{"nativeType": "number"}],
          "doc": "Longitude.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Money",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "amount",
          "type": [{"nativeType": "string"}],
          "doc": "decimal amount representation.",
          "in": "NA"
        },
                {
          "name": "currency",
          "type": [{"nativeType": "string"}],
          "doc": "ISO 4217 format of the currency i.e. `USD`.",
          "in": "NA"
        },
                {
          "name": "value",
          "type": [{"nativeType": "string"}],
          "doc": "Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Negative",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["A set of messages shown during registration with negative response"],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "confirmation",
          "type": [{"referenceType": "All APIs.events-v1-event.ResponseConfirmation"}],
          "doc": "Confirmation messages shown after registration.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Main form title for negative response.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Occurrence",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "endDate",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event end timestamp.",
          "in": "NA"
        },
                {
          "name": "showTimeZone",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether time zone is displayed in formatted schedule.",
          "in": "NA"
        },
                {
          "name": "startDate",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event start timestamp.",
          "in": "NA"
        },
                {
          "name": "timeZoneId",
          "type": [{"nativeType": "string"}],
          "doc": "Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "OnlineConferencing",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "config",
          "type": [{"referenceType": "All APIs.events-v1-event.OnlineConferencingConfig"}],
          "doc": "",
          "in": "NA"
        },
                {
          "name": "providerName",
          "type": [{"nativeType": "string"}],
          "doc": "Configured conferencing provider name.",
          "in": "NA"
        },
                {
          "name": "session",
          "type": [{"referenceType": "All APIs.events-v1-event.OnlineConferencingSession"}],
          "doc": "",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "OnlineConferencingConfig",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "conferenceType",
          "type": [{"referenceType": "All APIs.events-v1-event.ConferenceType"}],
          "doc": "Conference type",
          "in": "NA"
        },
                {
          "name": "enabled",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether online conferencing is enabled (not supported for TBD schedules).\nWhen enabled, links to join conferencing are generated and provided to guests.",
          "in": "NA"
        },
                {
          "name": "providerId",
          "type": [{"nativeType": "string"}],
          "doc": "Conferencing provider ID.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "OnlineConferencingSession",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "guestLink",
          "type": [{"nativeType": "string"}],
          "doc": "Link for guests to join the online conference session.",
          "in": "NA"
        },
                {
          "name": "hostLink",
          "type": [{"nativeType": "string"}],
          "doc": "Link for event host to start the online conference session.",
          "in": "NA"
        },
                {
          "name": "password",
          "type": [{"nativeType": "string"}],
          "doc": "The password required to join online conferencing session (when relevant).",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "OptionSelection",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["Describes initially selected option when an input has multiple choices.\nDefaults to first (0th) option if not configured."],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "optionIndex",
          "type": [{"nativeType": "number"}],
          "doc": "0-based index from predefined `input.options` which is selected initially.",
          "in": "NA"
        },
                {
          "name": "placeholderText",
          "type": [{"nativeType": "string"}],
          "doc": "Placeholder hint describing expected choices (such as \"Please select\").\nConsidered an empty choice.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Paging",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "limit",
          "type": [{"nativeType": "number"}],
          "doc": "Number of items to load per page.",
          "in": "NA"
        },
                {
          "name": "offset",
          "type": [{"nativeType": "number"}],
          "doc": "Number of items to skip in the current sort order.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "PagingMetadataV2",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "count",
          "type": [{"nativeType": "number"}],
          "doc": "Number of items returned in the response.",
          "in": "NA"
        },
                {
          "name": "cursors",
          "type": [{"referenceType": "All APIs.events-v1-event.Cursors"}],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.",
          "in": "NA"
        },
                {
          "name": "offset",
          "type": [{"nativeType": "number"}],
          "doc": "Offset that was requested.",
          "in": "NA"
        },
                {
          "name": "tooManyToCount",
          "type": [{"nativeType": "boolean"}],
          "doc": "Flag that indicates the server failed to calculate the `total` field.",
          "in": "NA"
        },
                {
          "name": "total",
          "type": [{"nativeType": "number"}],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Positive",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["Set of messages shown during registration when RSVP response is positive."],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "confirmation",
          "type": [{"referenceType": "All APIs.events-v1-event.PositiveResponseConfirmation"}],
          "doc": "Confirmation messages shown after registration.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Main form title for positive response.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "PositiveResponseConfirmation",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["Confirmation messages shown after registration."],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "addToCalendarActionLabel",
          "type": [{"nativeType": "string"}],
          "doc": "\"Add to calendar\" call-to-action label text.",
          "in": "NA"
        },
                {
          "name": "message",
          "type": [{"nativeType": "string"}],
          "doc": "Confirmation message text.",
          "in": "NA"
        },
                {
          "name": "shareActionLabel",
          "type": [{"nativeType": "string"}],
          "doc": "\"Share event\" call-to-action label text.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Confirmation message title.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "PublishDraftEventRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "_id",
        "type": [{"nativeType": "string"}],
        "doc": "Event ID.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "PublishDraftEventResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.Event"}],
        "doc": "Published event.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "QueryEventsRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "facet",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "Filter facets to include in the response.\nSee [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        },
                {
          "name": "fieldset",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.EventFieldset"}]
          }}],
          "doc": "Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\nSome fields require additional computation that affects latency.\nUse minimum set of required fieldset for best performance.",
          "in": "NA"
        },
                {
          "name": "filter",
          "type": [{"complexType":           {
            "referenceType": "All APIs.events-v1-event.Record",
            "typeParams":             [
              {"nativeType": "string"},
              {"nativeType": "any"}
            ]
          }}],
          "doc": "Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        },
                {
          "name": "includeDrafts",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether draft events should be returned in the response.\nRequires WIX_EVENTS.MANAGE_EVENTS permission.",
          "in": "NA"
        },
                {
          "name": "limit",
          "type": [{"nativeType": "number"}],
          "doc": "Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).",
          "in": "NA"
        },
                {
          "name": "offset",
          "type": [{"nativeType": "number"}],
          "doc": "Number of items to skip. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).",
          "in": "NA"
        },
                {
          "name": "sort",
          "type": [{"nativeType": "string"}],
          "doc": "Sort order, defaults to `\"created:asc\"`.\nSee [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        },
                {
          "name": "userId",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "User ID filter, by default any",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "QueryEventsResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "events",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Event"}]
          }}],
          "doc": "Events list",
          "in": "NA"
        },
                {
          "name": "facets",
          "type": [{"complexType":           {
            "referenceType": "All APIs.events-v1-event.Record",
            "typeParams":             [
              {"nativeType": "string"},
              {"referenceType": "All APIs.events-v1-event.FacetCounts"}
            ]
          }}],
          "doc": "Filter facets.",
          "in": "NA"
        },
                {
          "name": "limit",
          "type": [{"nativeType": "number"}],
          "doc": "Limit.",
          "in": "NA"
        },
                {
          "name": "offset",
          "type": [{"nativeType": "number"}],
          "doc": "Offset.",
          "in": "NA"
        },
                {
          "name": "total",
          "type": [{"nativeType": "number"}],
          "doc": "Total number of events that match the given filters.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "QueryEventsV2Request",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "facet",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "Filter facets to include in the response.\nSee [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        },
                {
          "name": "fieldset",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.EventFieldset"}]
          }}],
          "doc": "Controls which event properties are returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_event-fieldset).\nSome fields require additional computation that affects latency.\nUse minimum set of required fieldset for best performance.",
          "in": "NA"
        },
                {
          "name": "includeDrafts",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether draft events should be returned in the response.\nRequires WIX_EVENTS.MANAGE_EVENTS permission.",
          "in": "NA"
        },
                {
          "name": "query",
          "type": [{"referenceType": "All APIs.events-v1-event.QueryV2"}],
          "doc": "",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "QueryEventsV2Response",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "events",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Event"}]
          }}],
          "doc": "Events list",
          "in": "NA"
        },
                {
          "name": "facets",
          "type": [{"complexType":           {
            "referenceType": "All APIs.events-v1-event.Record",
            "typeParams":             [
              {"nativeType": "string"},
              {"referenceType": "All APIs.events-v1-event.FacetCounts"}
            ]
          }}],
          "doc": "Filter facets.",
          "in": "NA"
        },
                {
          "name": "pagingMetadata",
          "type": [{"referenceType": "All APIs.events-v1-event.PagingMetadataV2"}],
          "doc": "",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "QueryV2",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "filter",
          "type": [{"complexType":           {
            "referenceType": "All APIs.events-v1-event.Record",
            "typeParams":             [
              {"nativeType": "string"},
              {"nativeType": "any"}
            ]
          }}],
          "doc": "Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        },
                {
          "name": "paging",
          "type": [{"referenceType": "All APIs.events-v1-event.Paging"}],
          "doc": "Pointer to page of results using offset.\nSee [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).",
          "in": "NA"
        },
                {
          "name": "sort",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Sorting"}]
          }}],
          "doc": "Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]\nSee [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-events).",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Recurrences",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "categoryId",
          "type": [{"nativeType": "string"}],
          "doc": "Recurring event category ID.",
          "in": "NA"
        },
                {
          "name": "occurrences",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Occurrence"}]
          }}],
          "doc": "Event occurrences.",
          "in": "NA"
        },
                {
          "name": "status",
          "type": [{"referenceType": "All APIs.events-v1-event.Status"}],
          "doc": "Recurrence status.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Registration",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "external",
          "type": [{"referenceType": "All APIs.events-v1-event.ExternalEvent"}],
          "doc": "External registration details.",
          "in": "NA"
        },
                {
          "name": "initialType",
          "type": [{"referenceType": "All APIs.events-v1-event.EventType"}],
          "doc": "Initial event type which was set when creating an event.",
          "in": "NA"
        },
                {
          "name": "restrictedTo",
          "type": [{"referenceType": "All APIs.events-v1-event.VisitorType"}],
          "doc": "Types of users allowed to register.",
          "in": "NA"
        },
                {
          "name": "rsvpCollection",
          "type": [{"referenceType": "All APIs.events-v1-event.RsvpCollection"}],
          "doc": "RSVP collection details.",
          "in": "NA"
        },
                {
          "name": "status",
          "type": [{"referenceType": "All APIs.events-v1-event.RegistrationStatus"}],
          "doc": "Event registration status.",
          "in": "NA"
        },
                {
          "name": "ticketing",
          "type": [{"referenceType": "All APIs.events-v1-event.Ticketing"}],
          "doc": "Ticketing details.",
          "in": "NA"
        },
                {
          "name": "type",
          "type": [{"referenceType": "All APIs.events-v1-event.EventType"}],
          "doc": "Event type.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "RegistrationClosedMessages",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "exploreEventsActionLabel",
          "type": [{"nativeType": "string"}],
          "doc": "\"Explore other events\" call-to-action label text.",
          "in": "NA"
        },
                {
          "name": "message",
          "type": [{"nativeType": "string"}],
          "doc": "Message shown when event registration is closed.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "RegistrationConfig",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "disabledRegistration",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether registration is disabled.",
          "in": "NA"
        },
                {
          "name": "externalRegistrationUrl",
          "type": [{"nativeType": "string"}],
          "doc": "External event registration URL (for external events only).",
          "in": "NA"
        },
                {
          "name": "initialType",
          "type": [{"referenceType": "All APIs.events-v1-event.EventType"}],
          "doc": "Initial event type. Only RSVP and TICKETS are allowed when creating an event.\nUpdating this field is not allowed.",
          "in": "NA"
        },
                {
          "name": "pausedRegistration",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether registration is closed.",
          "in": "NA"
        },
                {
          "name": "restrictedTo",
          "type": [{"referenceType": "All APIs.events-v1-event.VisitorType"}],
          "doc": "Types of users allowed to register.",
          "in": "NA"
        },
                {
          "name": "ticketingConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.TicketingConfig"}],
          "doc": "Ticketing configuration.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "ResponseConfirmation",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["Confirmation messages shown after registration."],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "shareActionLabel",
          "type": [{"nativeType": "string"}],
          "doc": "\"Share event\" call-to-action label text.",
          "in": "NA"
        },
                {
          "name": "title",
          "type": [{"nativeType": "string"}],
          "doc": "Confirmation message title.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "RsvpCollection",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "config",
        "type": [{"referenceType": "All APIs.events-v1-event.RsvpCollectionConfig"}],
        "doc": "RSVP collection configuration.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "RsvpCollectionConfig",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "limit",
          "type": [{"nativeType": "number"}],
          "doc": "Total guest limit available to register to the event.\nAdditional guests per RSVP are counted towards total guests.",
          "in": "NA"
        },
                {
          "name": "rsvpStatusOptions",
          "type": [{"referenceType": "All APIs.events-v1-event.RsvpStatusOptions"}],
          "doc": "Defines the supported RSVP statuses.",
          "in": "NA"
        },
                {
          "name": "waitlist",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether a waitlist is opened when total guest limit is reached, allowing guests to create RSVP with WAITING RSVP status.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "RsvpFormMessages",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "negativeMessages",
          "type": [{"referenceType": "All APIs.events-v1-event.Negative"}],
          "doc": "Messages shown for RSVP = `NO`.",
          "in": "NA"
        },
                {
          "name": "positiveMessages",
          "type": [{"referenceType": "All APIs.events-v1-event.Positive"}],
          "doc": "Messages shown for RSVP = `YES`.",
          "in": "NA"
        },
                {
          "name": "rsvpNoOption",
          "type": [{"nativeType": "string"}],
          "doc": "Label text indicating RSVP `NO` response.",
          "in": "NA"
        },
                {
          "name": "rsvpYesOption",
          "type": [{"nativeType": "string"}],
          "doc": "Label text indicating RSVP `YES` response.",
          "in": "NA"
        },
                {
          "name": "submitActionLabel",
          "type": [{"nativeType": "string"}],
          "doc": "\"Submit form\" call-to-action label text.",
          "in": "NA"
        },
                {
          "name": "waitlistMessages",
          "type": [{"referenceType": "All APIs.events-v1-event.Positive"}],
          "doc": "Messages shown for RSVP = `WAITING` (when event is full and waitlist is available).",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "RsvpSummary",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "no",
          "type": [{"nativeType": "number"}],
          "doc": "Number of RSVPs with status `NO`.",
          "in": "NA"
        },
                {
          "name": "total",
          "type": [{"nativeType": "number"}],
          "doc": "Total number of RSVPs.",
          "in": "NA"
        },
                {
          "name": "waitlist",
          "type": [{"nativeType": "number"}],
          "doc": "Number of RSVPs in waitlist.",
          "in": "NA"
        },
                {
          "name": "yes",
          "type": [{"nativeType": "number"}],
          "doc": "Number of RSVPs with status `YES`.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "ScheduleConfig",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "endDate",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event end timestamp.",
          "in": "NA"
        },
                {
          "name": "endDateHidden",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether end date is hidden in the formatted schedule.",
          "in": "NA"
        },
                {
          "name": "recurrences",
          "type": [{"referenceType": "All APIs.events-v1-event.Recurrences"}],
          "doc": "Event recurrences.",
          "in": "NA"
        },
                {
          "name": "scheduleTbd",
          "type": [{"nativeType": "boolean"}],
          "doc": "Defines event as TBD (To Be Determined) schedule.\nWhen event time is not yet defined, TBD message is displayed instead of event start and end times.\n`startDate`, `endDate` and `timeZoneId` are not required when schedule is TBD.",
          "in": "NA"
        },
                {
          "name": "scheduleTbdMessage",
          "type": [{"nativeType": "string"}],
          "doc": "TBD message.",
          "in": "NA"
        },
                {
          "name": "showTimeZone",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether time zone is displayed in formatted schedule.",
          "in": "NA"
        },
                {
          "name": "startDate",
          "type": [{"referenceType": "All APIs.events-v1-event.Date"}],
          "doc": "Event start timestamp.",
          "in": "NA"
        },
                {
          "name": "timeZoneId",
          "type": [{"nativeType": "string"}],
          "doc": "Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Scheduling",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "config",
          "type": [{"referenceType": "All APIs.events-v1-event.ScheduleConfig"}],
          "doc": "Schedule configuration.",
          "in": "NA"
        },
                {
          "name": "formatted",
          "type": [{"nativeType": "string"}],
          "doc": "Formatted schedule representation.",
          "in": "NA"
        },
                {
          "name": "startDateFormatted",
          "type": [{"nativeType": "string"}],
          "doc": "Formatted start date of the event (empty for TBD schedules).",
          "in": "NA"
        },
                {
          "name": "startTimeFormatted",
          "type": [{"nativeType": "string"}],
          "doc": "Formatted start time of the event (empty for TBD schedules).",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "SeoSchema",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\nThe search engines use this information for ranking purposes, or to display snippets in the search results.\nThis data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself."],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "settings",
          "type": [{"referenceType": "All APIs.events-v1-event.Settings"}],
          "doc": "SEO general settings.",
          "in": "NA"
        },
                {
          "name": "tags",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.Tag"}]
          }}],
          "doc": "SEO tags information.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "SeoSettings",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "advancedSeoData",
          "type": [{"referenceType": "All APIs.events-v1-event.SeoSchema"}],
          "doc": "Advanced SEO data",
          "in": "NA"
        },
                {
          "name": "hidden",
          "type": [{"nativeType": "boolean"}],
          "doc": "Hidden from SEO Site Map",
          "in": "NA"
        },
                {
          "name": "slug",
          "type": [{"nativeType": "string"}],
          "doc": "URL slug",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Settings",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "preventAutoRedirect",
        "type": [{"nativeType": "boolean"}],
        "doc": "disable auto creation of 301 redirects on slug changes (enabled by default).",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "SiteUrl",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["Site URL components"],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "base",
          "type": [{"nativeType": "string"}],
          "doc": "Base URL. For premium sites, this will be the domain.\nFor free sites, this would be site URL (e.g `mysite.wixsite.com/mysite`)",
          "in": "NA"
        },
                {
          "name": "path",
          "type": [{"nativeType": "string"}],
          "doc": "The path to that page - e.g `/my-events/weekly-meetup-2`",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Sorting",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "fieldName",
          "type": [{"nativeType": "string"}],
          "doc": "Name of the field to sort by",
          "in": "NA"
        },
                {
          "name": "order",
          "type": [{"referenceType": "All APIs.events-v1-event.SortOrder"}],
          "doc": "Sort order (ASC/DESC). Defaults to ASC",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "StreetAddress",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "apt",
          "type": [{"nativeType": "string"}],
          "doc": "apartment number",
          "in": "NA"
        },
                {
          "name": "name",
          "type": [{"nativeType": "string"}],
          "doc": "street name",
          "in": "NA"
        },
                {
          "name": "number",
          "type": [{"nativeType": "string"}],
          "doc": "street number",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Subdivision",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "code",
          "type": [{"nativeType": "string"}],
          "doc": "subdivision short code",
          "in": "NA"
        },
                {
          "name": "name",
          "type": [{"nativeType": "string"}],
          "doc": "subdivision full-name",
          "in": "NA"
        },
                {
          "name": "type",
          "type": [{"referenceType": "All APIs.events-v1-event.SubdivisionType"}],
          "doc": "",
          "in": "NA"
        },
                {
          "name": "typeInfo",
          "type": [{"nativeType": "string"}],
          "doc": "a free-text description of subdivision type",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Tag",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "children",
          "type": [{"nativeType": "string"}],
          "doc": "Tag inner content e.g. `<title> inner content <\/title>`.",
          "in": "NA"
        },
                {
          "name": "custom",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether the tag is a custom tag.",
          "in": "NA"
        },
                {
          "name": "disabled",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether the tag is disabled.",
          "in": "NA"
        },
                {
          "name": "meta",
          "type": [{"complexType":           {
            "referenceType": "All APIs.events-v1-event.Record",
            "typeParams":             [
              {"nativeType": "string"},
              {"nativeType": "any"}
            ]
          }}],
          "doc": "Tag meta data, e.g. {height: 300, width: 240}.",
          "in": "NA"
        },
                {
          "name": "props",
          "type": [{"complexType":           {
            "referenceType": "All APIs.events-v1-event.Record",
            "typeParams":             [
              {"nativeType": "string"},
              {"nativeType": "any"}
            ]
          }}],
          "doc": "SEO tag attributes/properties (name, content, rel, href).",
          "in": "NA"
        },
                {
          "name": "type",
          "type": [{"nativeType": "string"}],
          "doc": "SEO tag type. Supported values: `title`, `meta`, `script`, `link`.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "TaxConfig",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "name",
          "type": [{"nativeType": "string"}],
          "doc": "Tax name.",
          "in": "NA"
        },
                {
          "name": "rate",
          "type": [{"nativeType": "string"}],
          "doc": "Tax rate (e.g.,`21.55`).",
          "in": "NA"
        },
                {
          "name": "type",
          "type": [{"referenceType": "All APIs.events-v1-event.TaxType"}],
          "doc": "Tax application settings.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Ticketing",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "config",
          "type": [{"referenceType": "All APIs.events-v1-event.TicketingConfig"}],
          "doc": "Ticketing configuration.",
          "in": "NA"
        },
                {
          "name": "currency",
          "type": [{"nativeType": "string"}],
          "doc": "Currency used in event transactions.",
          "in": "NA"
        },
                {
          "name": "highestPrice",
          "type": [{"nativeType": "string"}],
          "doc": "Deprecated.",
          "in": "NA"
        },
                {
          "name": "highestTicketPrice",
          "type": [{"referenceType": "All APIs.events-v1-event.Money"}],
          "doc": "Price of highest priced ticket.",
          "in": "NA"
        },
                {
          "name": "highestTicketPriceFormatted",
          "type": [{"nativeType": "string"}],
          "doc": "Formatted price of highest priced ticket.",
          "in": "NA"
        },
                {
          "name": "lowestPrice",
          "type": [{"nativeType": "string"}],
          "doc": "Deprecated.",
          "in": "NA"
        },
                {
          "name": "lowestTicketPrice",
          "type": [{"referenceType": "All APIs.events-v1-event.Money"}],
          "doc": "Price of lowest priced ticket.",
          "in": "NA"
        },
                {
          "name": "lowestTicketPriceFormatted",
          "type": [{"nativeType": "string"}],
          "doc": "Formatted price of lowest priced ticket.",
          "in": "NA"
        },
                {
          "name": "soldOut",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether all tickets are sold for this event.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "TicketingConfig",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "guestAssignedTickets",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether the form must be filled out separately for each ticket.",
          "in": "NA"
        },
                {
          "name": "stockManagerAppId",
          "type": [{"nativeType": "string"}],
          "doc": "App Id for external ticket stock management.\nBy default tickets stock is defined in TicketDefinition object.\nIf defined then limitation from TicketDefinition is ignored.",
          "in": "NA"
        },
                {
          "name": "taxConfig",
          "type": [{"referenceType": "All APIs.events-v1-event.TaxConfig"}],
          "doc": "Tax configuration.",
          "in": "NA"
        },
                {
          "name": "ticketLimitPerOrder",
          "type": [{"nativeType": "number"}],
          "doc": "Limit of tickets that can be purchased per order, default 20.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "TicketingSummary",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "currencyLocked",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether currency is locked and cannot be changed (generally occurs after the first order in the specified currency has been created).",
          "in": "NA"
        },
                {
          "name": "orders",
          "type": [{"nativeType": "number"}],
          "doc": "Number of orders placed.",
          "in": "NA"
        },
                {
          "name": "revenue",
          "type": [{"referenceType": "All APIs.events-v1-event.Money"}],
          "doc": "Total revenue, excluding fees.\n(taxes and payment provider fees are not deducted.)",
          "in": "NA"
        },
                {
          "name": "tickets",
          "type": [{"nativeType": "number"}],
          "doc": "Number of tickets sold.",
          "in": "NA"
        },
                {
          "name": "totalSales",
          "type": [{"referenceType": "All APIs.events-v1-event.Money"}],
          "doc": "Total balance of confirmed transactions.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "TicketsUnavailableMessages",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "exploreEventsActionLabel",
          "type": [{"nativeType": "string"}],
          "doc": "\"Explore other events\" call-to-action label text.",
          "in": "NA"
        },
                {
          "name": "message",
          "type": [{"nativeType": "string"}],
          "doc": "Message shown when event tickets are unavailable.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "TimeDuration",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": ["A coarse-grained representation of time duration divided into whole constituting components of days, hours, and minutes.\nFor example, 25.5 hours duration is represented as `{ days: 1, hours: 1, minutes: 30 }`."],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "days",
          "type": [{"nativeType": "number"}],
          "doc": "Number of days",
          "in": "NA"
        },
                {
          "name": "hours",
          "type": [{"nativeType": "number"}],
          "doc": "Number of hours",
          "in": "NA"
        },
                {
          "name": "minutes",
          "type": [{"nativeType": "number"}],
          "doc": "Number of minutes",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "UpdateEventRequest",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "_id",
          "type": [{"nativeType": "string"}],
          "doc": "Event ID.",
          "in": "NA"
        },
                {
          "name": "event",
          "type": [{"referenceType": "All APIs.events-v1-event.EventData"}],
          "doc": "Event data to update (partial)",
          "in": "NA"
        },
                {
          "name": "fields",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"nativeType": "string"}]
          }}],
          "doc": "Set of field paths to update.\n<!--ONLY:REST-->\nFields will be auto-populated from the `event` entity unless added to the request explicitly.\n<!--END:ONLY:REST-->\nBehavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.",
          "in": "NA"
        },
                {
          "name": "language",
          "type": [{"nativeType": "string"}],
          "doc": "Content language code in ISO 639-1 format.\nUsed for translating ticket PDF labels, registration form, automatic emails, etc.\nSupported languages: ar, bg, cs, da, de, el, en, es, fi, fr, he, hi, hu, id, it, ja, ko, ms, nl, no, pl, pt, ro, ru, sv, th, tl, tr, uk, zh.\nDefaults to en.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "UpdateEventResponse",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [      {
        "name": "event",
        "type": [{"referenceType": "All APIs.events-v1-event.Event"}],
        "doc": "Updated event.",
        "in": "NA"
      }],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "UserFilter",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "global",
          "type": [{"nativeType": "boolean"}],
          "doc": "Whether filter is applied across all Wix sites",
          "in": "NA"
        },
                {
          "name": "relation",
          "type": [{"complexType":           {
            "nativeType": "Array",
            "typeParams": [{"referenceType": "All APIs.events-v1-event.ATTENDING"}]
          }}],
          "doc": "Relation of user to event",
          "in": "NA"
        },
                {
          "name": "userId",
          "type": [{"nativeType": "string"}],
          "doc": "User who is related to event",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "ConferenceType",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "MEETING",
        "WEBINAR"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventFieldset",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "AGENDA",
        "DASHBOARD",
        "DETAILS",
        "FEED",
        "FORM",
        "FULL",
        "ONLINE_CONFERENCING_SESSION",
        "REGISTRATION",
        "SEO_SETTINGS",
        "TEXTS",
        "URLS"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventStatus",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "CANCELED",
        "DRAFT",
        "ENDED",
        "SCHEDULED",
        "STARTED"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "EventType",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "EXTERNAL",
        "NA_EVENT_TYPE",
        "NO_REGISTRATION",
        "RSVP",
        "TICKETS"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "InputControlType",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "ADDRESS_FULL",
        "ADDRESS_SHORT",
        "CHECKBOX",
        "DATE",
        "DROPDOWN",
        "GUEST_CONTROL",
        "INPUT",
        "NAME",
        "RADIO",
        "TEXTAREA"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "LocationType",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "ONLINE",
        "VENUE"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "RegistrationStatus",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "CLOSED",
        "CLOSED_MANUALLY",
        "NA_REGISTRATION_STATUS",
        "OPEN_EXTERNAL",
        "OPEN_RSVP",
        "OPEN_RSVP_WAITLIST",
        "OPEN_TICKETS"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Relation",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum": ["ATTENDING"],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "RsvpStatusOptions",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "YES_AND_NO",
        "YES_ONLY"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "SortOrder",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "State",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "AUTO",
        "HIDDEN",
        "MANUAL",
        "RECURRING_EVENT"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "Status",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "ONE_TIME",
        "RECURRING",
        "RECURRING_LAST_CANCELED",
        "RECURRING_LAST_ENDED",
        "RECURRING_NEXT"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "SubdivisionType",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "ADMINISTRATIVE_AREA_LEVEL_1",
        "ADMINISTRATIVE_AREA_LEVEL_2",
        "ADMINISTRATIVE_AREA_LEVEL_3",
        "ADMINISTRATIVE_AREA_LEVEL_4",
        "ADMINISTRATIVE_AREA_LEVEL_5",
        "COUNTRY",
        "UNKNOWN_SUBDIVISION_TYPE"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "TaxType",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "ADDED",
        "ADDED_AT_CHECKOUT",
        "INCLUDED"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "ValueType",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "ADDRESS",
        "DATE_TIME",
        "NUMBER",
        "TEXT",
        "TEXT_ARRAY"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "VisitorType",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members": [],
      "labels": [],
      "enum":       [
        "MEMBER",
        "VISITOR",
        "VISITOR_OR_MEMBER"
      ],
      "customLabels": [],
      "dynamicCustomLabels": []
    },
        {
      "name": "OnlineConferencingSession",
      "locations": [],
      "docs":       {
        "summary": "",
        "description": [""],
        "links": [],
        "examples": [],
        "request": "NA"
      },
      "members":       [
                {
          "name": "guestLink",
          "type": [{"nativeType": "string"}],
          "doc": "Link for guests to join the online conference session.",
          "in": "NA"
        },
                {
          "name": "hostLink",
          "type": [{"nativeType": "string"}],
          "doc": "Link for event host to start the online conference session.",
          "in": "NA"
        },
                {
          "name": "password",
          "type": [{"nativeType": "string"}],
          "doc": "The password required to join online conferencing session (when relevant).",
          "in": "NA"
        },
                {
          "name": "sessionCreated",
          "type": [{"nativeType": "boolean"}],
          "doc": "Indicates that session was created successfully on providers side.",
          "in": "NA"
        }
      ],
      "labels": [],
      "enum": [],
      "customLabels": [],
      "dynamicCustomLabels": []
    }
  ],
  "relatedContent": [],
  "FAQs": [],
  "tags": [],
  "relatedGuides": [],
  "events": [],
  "extra": {},
  "clientId": "ambassador-events-v1-event"
}