{ "name": "slots",
  "memberOf": "wix-bookings-rc-v2-backend",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 41,
      "filename": "index.js" },
  "docs":
    { "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "queryAvailability",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-bookings-rc-v2-backend.slots.BookingsRcV2QueryBuilder_26414160218",
            "doc": "Contains functionality for refining a bookingsRcV2 query.\nThe `BookingsRcV2QueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the bookingsRcV2 query functions,\nrefine the query by chaining `BookingsRcV2QueryBuilder` functions, and then execute the\nquery by chaining the [`find()`](#find) function.\n\nFor example, the following code queries...:\n\n```javascript\nimport wixBookingsRcV2Backend from 'wix-bookingsRcV2-backend';\n\nwixBookingsRcV2Backend.queryBookingsRcV2()\n  .eq(\"<property1>\", \"<value1>\")\n  .ascending(\"<property2>\")\n  .limit(5)\n  .find()\n  .then( (results) => {\n    console.log(results.items);\n  } );\n```" },
        "locations":
          [ { "lineno": 1262,
              "filename": "com_wixpress_bookings_availability_AvailabilityCalendar_QueryAvailability_queryAvailability.js" } ],
        "docs":
          { "summary": "Returns availability entries, describing service availability for booking given the query constraints.",
            "description":
              [ "Query object support:",
                "- **filter**: supports",
                "- `startDate`: Query range start time. Formatted according to RFC3339. When optional timezone field present, will be treated as local-date-time (timezone offset in the format is ignored). Required.",
                "- `endDate`: Query range end time. Formatted according to RFC3339. When optional timezone field present, will be treated as local-date-time (timezone offset in the format is ignored). Required. // define time span limit and default",
                "- `serviceId`: A list of one or more service ids.",
                "- `resourceId`: A list of one or more resource ids (staff ids). Optional.",
                "- `bookable`: When set, only entries with corresponding bookable values will be returned. Optional. When absent, both bookable and non-bookable slots are returned.",
                "- `bookingPolicyViolations.tooEarlyToBook`: When set, only entries with corresponding tooEarlyToBook values will be returned. Optional.",
                "- `bookingPolicyViolations.tooLateToBook`: When set, only entries with corresponding tooLateToBook values will be returned. Optional.",
                "- `location.businessLocation.id`: Filter by `location.business_location.id`. Supports multiple values. Optional.",
                "- `openSpots`: Filter by amount of `openSpots`. Supports 'gte' only. Optional.",
                "- **fields**: supported.",
                "- **paging**: Paging is supported using CursorPaging. For paging the results, i.e. with a page size of 10, set the `query.cursorPaging.limit` to a value of `10`.",
                "The response will contain a value in the `pagingMetadata.cursors.next` field.",
                "Pass this value in the `query.cursorPaging.cursor` field in the following calls and leave the `query` field empty.",
                "- **fieldsets**: not supported." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { slots } from \"wix-bookings-rc-v2-backend\";",
                      "",
                      "export function queryAvailability() {",
                      "  const options = {",
                      "    timezone: \"a string\",",
                      "    slotsPerDay: 42,",
                      "    suppressAuth: true",
                      "  };",
                      "",
                      "  return slots",
                      "    .queryAvailability()",
                      "    .eq(\"key\", \"value\")",
                      "    .find(options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "BookingPolicyViolations_6014274348",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wixpress_bookings_availability_AvailabilityCalendar_QueryAvailability_queryAvailability.js" } ],
        "docs":
          { "summary": "Indicators of booking policy violations for the given Slot.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "tooEarlyToBook",
              "type": "boolean",
              "doc": "According to bookings-policy defined for the relevant service, the slot is not open for booking yet." },
            { "name": "tooLateToBook",
              "type": "boolean",
              "doc": "According to bookings-policy defined for the relevant service, the slot is no longer available for booking." },
            { "name": "bookOnlineDisabled",
              "type": "boolean",
              "doc": "The slot is available according to service schedule, but online booking was disabled by the business." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Location_9777479600",
        "locations":
          [ { "lineno": 10,
              "filename": "com_wixpress_bookings_availability_AvailabilityCalendar_QueryAvailability_queryAvailability.js" } ],
        "docs":
          { "summary": "Geographic location of the Slot.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Business Location ID. Present if the location is a business location." },
            { "name": "name",
              "type": "string",
              "doc": "Location name." },
            { "name": "formattedAddress",
              "type": "string",
              "doc": "A string containing the full address of this location." },
            { "name": "locationType",
              "type": "string",
              "doc": "Location type.\n<!--ONLY:VELO\n One of:\n - `\"OWNER_BUSINESS\"` The business address as set in the siteâ€™s general settings.\n - `\"OWNER_CUSTOM\"` The address as set when creating the service.\n - `\"CUSTOM\"` The address set for the individual session.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"OWNER_BUSINESS\"`\n + `\"OWNER_CUSTOM\"`\n + `\"CUSTOM\"`" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "QueryOptions_5516322781",
        "locations":
          [ { "lineno": 1249,
              "filename": "com_wixpress_bookings_availability_AvailabilityCalendar_QueryAvailability_queryAvailability.js" } ],
        "docs":
          { "summary": "The `options` parameter is an optional parameter that can be used when calling the query [`find()`](#find) function.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "timezone",
              "type": "string",
              "doc": "The timezone in which availability slots should be calculated.",
              "optional": true },
            { "name": "slotsPerDay",
              "type": "number",
              "doc": "The maximal number of items to load per date. For example, when given the value 1,\n at most one available slot will be returned per day within the requested dates range.\n When a day has both bookable and non-bookable slots (considering the given filters), bookable slots will be returned first.\n Non-bookable slots will be returned only if relevant according to given filters and all bookable slots are already included.\n When empty, no slots per day limit will be applied (other than the general limit given in query field).",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SlotAvailability_37990688758",
        "locations":
          [ { "lineno": 45,
              "filename": "com_wixpress_bookings_availability_AvailabilityCalendar_QueryAvailability_queryAvailability.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "slot",
              "type": "wix-bookings-rc-v2-backend.slots.Slot_39124433310",
              "doc": "Identifier for underlying session when session is a single session or generated from a recurring session. Required." },
            { "name": "bookable",
              "type": "boolean",
              "doc": "Indicates whether this Availability represents a bookable slot." },
            { "name": "totalSpots",
              "type": "number",
              "doc": "Number of total spots and open spots of this availability.\n E.g. a Yoga class of 10 spots with 3 booked.\n   availability {spots_total: 10, spots_open: 7 ...}\n E.g. a chair massage session which was already booked.\n   availability {total_spots: 1, open_spots: 0 ...}" },
            { "name": "openSpots",
              "type": "number" },
            { "name": "waitingList",
              "type": "wix-bookings-rc-v2-backend.slots.WaitingList_1324948425",
              "doc": "Indicates whether this slot has a waiting-list and its occupancy." },
            { "name": "bookingPolicyViolations",
              "type": "wix-bookings-rc-v2-backend.slots.BookingPolicyViolations_6014274348",
              "doc": "Indicators of booking policy violations for the given Slot." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SlotResource_6974471037",
        "locations":
          [ { "lineno": 60,
              "filename": "com_wixpress_bookings_availability_AvailabilityCalendar_QueryAvailability_queryAvailability.js" } ],
        "docs":
          { "summary": "The resource required for this Slot. Currently, in Bookings, this is the relevant staff. Required.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Resource's unique ID" },
            { "name": "name",
              "type": "string",
              "doc": "Resource's name. Required." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Resource's Schedule identifier. Required." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Slot_39124433310",
        "locations":
          [ { "lineno": 31,
              "filename": "com_wixpress_bookings_availability_AvailabilityCalendar_QueryAvailability_queryAvailability.js" } ],
        "docs":
          { "summary": "Identifier for underlying session when session is a single session or generated from a recurring session. Required.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Identifier for underlying session when session is a single session or generated from a recurring session. Required." },
            { "name": "serviceId",
              "type": "string",
              "doc": "Service identifier. Required." },
            { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule identifier. Required." },
            { "name": "startDate",
              "type": "string",
              "doc": "The start time of this Slot (formatted according to RFC3339). Required." },
            { "name": "endDate",
              "type": "string",
              "doc": "The end time of this Slot (formatted according to RFC3339). Required." },
            { "name": "timezone",
              "type": "string",
              "doc": "The timezone according to which the slot was calculated and should be presented." },
            { "name": "resource",
              "type": "wix-bookings-rc-v2-backend.slots.SlotResource_6974471037",
              "doc": "The resource required for this Slot. Currently, in Bookings, this is the relevant staff. Required." },
            { "name": "location",
              "type": "wix-bookings-rc-v2-backend.slots.Location_9777479600",
              "doc": "Geographic location of the Slot." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "WaitingList_1324948425",
        "locations":
          [ { "lineno": 69,
              "filename": "com_wixpress_bookings_availability_AvailabilityCalendar_QueryAvailability_queryAvailability.js" } ],
        "docs":
          { "summary": "Indicates whether this slot has a waiting-list and its occupancy.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "totalSpots",
              "type": "number",
              "doc": "Number of total spots and open spots of this waiting list.\n E.g. a Yoga class of 10 waiting list spots with 3 registered.\n   waitingList {total_spots: 10, open_spots: 7 ...}" },
            { "name": "openSpots",
              "type": "number" } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }